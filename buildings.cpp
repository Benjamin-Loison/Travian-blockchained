#include "main.h"
#include "QPlus.h"
#include "QStringPlus.h"
#include "resources.h"
#include "buildings.h"
#include <QtGlobal>
using namespace std;

#define NOT_BUILT QUINT8_MAX_VALUE

QString buildingsNames[BUILDINGS_NUMBER] = {QT_TRANSLATE_NOOP("buildings", "main building"),
                                            QT_TRANSLATE_NOOP("buildings", "rally point"),
                                            QT_TRANSLATE_NOOP("buildings", "cranny"),
                                            QT_TRANSLATE_NOOP("buildings", "warehouse"),
                                            QT_TRANSLATE_NOOP("buildings", "granary"),
                                            QT_TRANSLATE_NOOP("buildings", "embassy"), // same
                                            QT_TRANSLATE_NOOP("buildings", "marketplace"),
                                            QT_TRANSLATE_NOOP("buildings", "residence"),
                                            QT_TRANSLATE_NOOP("buildings", "palace"), // not currently used - keep it for future implementation and no building id shift
                                            QT_TRANSLATE_NOOP("buildings", "stonemason's lodge"),
                                            QT_TRANSLATE_NOOP("buildings", "treasury"), // same
                                            QT_TRANSLATE_NOOP("buildings", "town hall"),
                                            QT_TRANSLATE_NOOP("buildings", "trade office"),
                                            QT_TRANSLATE_NOOP("buildings", "great granary"), // same
                                            QT_TRANSLATE_NOOP("buildings", "great warehouse"), // same
                                            QT_TRANSLATE_NOOP("buildings", "barracks"),
                                            QT_TRANSLATE_NOOP("buildings", "hero's mansion"), // same
                                            QT_TRANSLATE_NOOP("buildings", "academy"),
                                            QT_TRANSLATE_NOOP("buildings", "smithy"),
                                            QT_TRANSLATE_NOOP("buildings", "stable"),
                                            QT_TRANSLATE_NOOP("buildings", "workshop"),
                                            QT_TRANSLATE_NOOP("buildings", "tournament square"),
                                            QT_TRANSLATE_NOOP("buildings", "grain mill"),
                                            QT_TRANSLATE_NOOP("buildings", "sawmill"),
                                            QT_TRANSLATE_NOOP("buildings", "brickyard"),
                                            QT_TRANSLATE_NOOP("buildings", "iron foundry"),
                                            QT_TRANSLATE_NOOP("buildings", "bakery"),
                                            QT_TRANSLATE_NOOP("buildings", "trapper"), // same
                                            QT_TRANSLATE_NOOP("buildings", "horse drinking trough"), // same
                                            QT_TRANSLATE_NOOP("buildings", "brewery"), // same
                                            QT_TRANSLATE_NOOP("buildings", "palisade"), // adapting name to tribe but not modifying the id ? - let's put it at the end likewise if add others no id shift - let say on id for each because resources need may vary on this parameter
                                            QT_TRANSLATE_NOOP("buildings", "city wall"),
                                            QT_TRANSLATE_NOOP("buildings", "earth wall"),
                                            QT_TRANSLATE_NOOP("buildings", "wonder of the world")};

quint8 buildingsLevelsNumber[BUILDINGS_NUMBER] = {
    20, 20, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 5, 5, 5, 5, 5, 20, 20, 10, 20, 20, 20, 100
};

QPair<quint8, quint8> buildings[BUILDINGS_SLOTS_NUMBER] = {qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(MAIN_BUILDING, 1),
                                                           qMakePair(0, 0),
                                                           qMakePair(RALLY_POINT, 1),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0),
                                                           qMakePair(0, 0)};

// Paint.NET gives with magick wand top left of an ellipse and we just have to add to each coordinate respectively 32 and 16 to get the middle
quint16 buildingsScreen[BUILDINGS_SLOTS_NUMBER][2] = {
    {1167, 232},
    {1277, 217},
    {1397, 231},

    {1072, 276},
    {1343, 280},
    {1483, 286},

    {1015, 329},
    {1131, 330},
    {1284, 337},
    {1427, 375},
    {1529, 346},

    {1008, 411},
    {1141, 415},
    {1531, 421},

    {1037, 478},
    {1225, 468},
    {1361, 468},
    {1463, 502},

    {1131, 530},
    {1243, 550},
    {1361, 536},

    {1286, 592}
};

// barracks time for level 3 to level 4 seems to differ for instance
quint32 buildingsTimes[RESOURCES_NUMBER + BUILDINGS_NUMBER][/*BUILDINGS_LEVELS_NUMBER*/100][FARMS_LEVELS_NUMBER] = {
    {{1300, 260, 250, 240, 230, 220, 220, 210, 200, 190, 190, 180, 170, 170, 160, 160, 150, 140, 140, 130, 130}, {3080, 620, 590, 570, 550, 530, 510, 490, 480, 460, 440, 430, 410, 400, 380, 370, 360, 340, 330, 320, 310}, {5930, 1190, 1140, 1100, 1060, 1020, 990, 950, 920, 880, 850, 820, 790, 760, 740, 710, 680, 660, 640, 610, 590}, {10480, 2100, 2020, 1950, 1880, 1810, 1750, 1680, 1620, 1560, 1510, 1450, 1400, 1350, 1300, 1260, 1210, 1170, 1120, 1080, 1040}, {17780, 3560, 3430, 3300, 3180, 3070, 2960, 2850, 2750, 2650, 2560, 2460, 2380, 2290, 2210, 2130, 2050, 1980, 1910, 1840, 1770}, {29440, 5890, 5680, 5470, 5270, 5090, 4900, 4730, 4560, 4390, 4230, 4080, 3930, 3790, 3660, 3520, 3400, 3280, 3160, 3040, 2930}, {48110, 9620, 9270, 8940, 8620, 8310, 8010, 7720, 7440, 7180, 6920, 6670, 6430, 6200, 5970, 5760, 5550, 5350, 5160, 4970, 4790}, {77970, 15590, 15030, 14490, 13970, 13470, 12980, 12510, 12060, 11630, 11210, 10810, 10420, 10040, 9680, 9330, 9000, 8670, 8360, 8060, 7770}, {125750, 25150, 24240, 23370, 22530, 21720, 20940, 20180, 19460, 18760, 18080, 17430, 16800, 16200, 15610, 15050, 14510, 13990, 13480, 13000, 12530}, {202200, 40440, 38980, 37580, 36230, 34920, 33670, 32450, 31290, 30160, 29070, 28030, 27020, 26050, 25110, 24200, 23330, 22490, 21680, 20900, 20150}},
    {{1100, 220, 210, 200, 200, 190, 180, 180, 170, 160, 160, 150, 150, 140, 140, 130, 130, 120, 120, 110, 110}, {2760, 550, 530, 510, 490, 480, 460, 440, 430, 410, 400, 380, 370, 360, 340, 330, 320, 310, 300, 290, 280}, {5420, 1080, 1040, 1010, 970, 940, 900, 870, 840, 810, 780, 750, 720, 700, 670, 650, 620, 600, 580, 560, 540}, {9670, 1930, 1860, 1800, 1730, 1670, 1610, 1550, 1500, 1440, 1390, 1340, 1290, 1250, 1200, 1160, 1120, 1080, 1040, 1000, 960}, {16460, 3290, 3170, 3060, 2950, 2840, 2740, 2640, 2550, 2460, 2370, 2280, 2200, 2120, 2040, 1970, 1900, 1830, 1770, 1700, 1640}, {27340, 5470, 5270, 5080, 4900, 4720, 4550, 4390, 4230, 4080, 3930, 3790, 3650, 3520, 3400, 3270, 3160, 3040, 2930, 2830, 2720}, {44750, 8950, 8630, 8320, 8020, 7730, 7450, 7180, 6920, 6670, 6430, 6200, 5980, 5760, 5560, 5360, 5160, 4980, 4800, 4630, 4460}, {72600, 14520, 14000, 13490, 13010, 12540, 12090, 11650, 11230, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230}, {117160, 23430, 22590, 21780, 20990, 20240, 19510, 18810, 18130, 17480, 16850, 16240, 15660, 15090, 14550, 14020, 13520, 13030, 12560, 12110, 11680}, {188460, 37690, 36330, 35030, 33770, 32550, 31380, 30250, 29160, 28110, 27100, 26120, 25180, 24280, 23400, 22560, 21750, 20960, 20210, 19480, 18780}},
    {{2250, 450, 430, 420, 400, 390, 370, 360, 350, 340, 320, 310, 300, 290, 280, 270, 260, 250, 240, 230, 220}, {4600, 920, 890, 850, 820, 790, 770, 740, 710, 690, 660, 640, 610, 590, 570, 550, 530, 510, 490, 480, 460}, {8360, 1670, 1610, 1550, 1500, 1440, 1390, 1340, 1290, 1250, 1200, 1160, 1120, 1080, 1040, 1000, 960, 930, 900, 860, 830}, {14380, 2880, 2770, 2670, 2580, 2480, 2390, 2310, 2220, 2140, 2070, 1990, 1920, 1850, 1790, 1720, 1660, 1600, 1540, 1490, 1430}, {24000, 4800, 4630, 4460, 4300, 4150, 4000, 3850, 3710, 3580, 3450, 3330, 3210, 3090, 2980, 2870, 2770, 2670, 2570, 2480, 2390}, {39400, 7880, 7600, 7320, 7060, 6810, 6560, 6320, 6100, 5880, 5670, 5460, 5270, 5080, 4890, 4720, 4550, 4380, 4230, 4070, 3930}, {64040, 12810, 12350, 11900, 11470, 11060, 10660, 10280, 9910, 9550, 9210, 8880, 8560, 8250, 7950, 7670, 7390, 7120, 6870, 6620, 6380}, {103470, 20690, 19950, 19230, 18540, 17870, 17230, 16610, 16010, 15430, 14880, 14340, 13830, 13330, 12850, 12390, 11940, 11510, 11100, 10700, 10310}, {166550, 33310, 32110, 30960, 29840, 28770, 27730, 26730, 25770, 24840, 23950, 23090, 22260, 21450, 20680, 19940, 19220, 18530, 17860, 17220, 16600}, {267480, 53500, 51570, 49710, 47920, 46200, 44540, 42930, 41390, 39900, 38460, 37080, 35740, 34460, 33210, 32020, 30870, 29760, 28680, 27650, 26660}},
    {{750, 150, 140, 140, 130, 130, 120, 120, 120, 110, 110, 100, 100, 100, 90, 90, 90, 80, 80, 80, 70}, {2200, 440, 420, 410, 390, 380, 370, 350, 340, 330, 320, 300, 290, 280, 270, 260, 250, 240, 240, 230, 220}, {4520, 900, 870, 840, 810, 780, 750, 730, 700, 670, 650, 630, 600, 580, 560, 540, 520, 500, 480, 470, 450}, {8230, 1650, 1590, 1530, 1470, 1420, 1370, 1320, 1270, 1230, 1180, 1140, 1100, 1060, 1020, 990, 950, 920, 880, 850, 820}, {14170, 2830, 2730, 2630, 2540, 2450, 2360, 2270, 2190, 2110, 2040, 1960, 1890, 1830, 1760, 1700, 1640, 1580, 1520, 1460, 1410}, {23670, 4730, 4560, 4400, 4240, 4090, 3940, 3800, 3660, 3530, 3400, 3280, 3160, 3050, 2940, 2830, 2730, 2630, 2540, 2450, 2360}, {38880, 7780, 7500, 7230, 6970, 6710, 6470, 6240, 6020, 5800, 5590, 5390, 5190, 5010, 4830, 4650, 4490, 4320, 4170, 4020, 3870}, {63210, 12640, 12190, 11750, 11320, 10920, 10520, 10140, 9780, 9430, 9090, 8760, 8450, 8140, 7850, 7570, 7290, 7030, 6780, 6530, 6300}, {102130, 20430, 19690, 18980, 18300, 17640, 17000, 16390, 15800, 15230, 14680, 14160, 13650, 13160, 12680, 12230, 11790, 11360, 10950, 10560, 10180}, {164410, 32880, 31700, 30560, 29460, 28400, 27370, 26390, 25440, 24520, 23640, 22790, 21970, 21180, 20410, 19680, 18970, 18290, 17630, 17000, 16380}},
    {{0, 0, 1930}, {0, 0, 0, 2430}, {0, 0, 0, 0, 2990}, {0, 0, 0, 0, 0, 3600}, {0, 0, 0, 0, 0, 0, 4280}, {0, 0, 0, 0, 0, 0, 0, 5030}, {0, 0, 0, 0, 0, 0, 0, 0, 5850}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 6770}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7790}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8910}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10170}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11560}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13120}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14850}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16780}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18930}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21330}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24000}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26990}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{1500, 300, 290, 280, 270, 260, 250, 240, 230, 220, 220, 210, 200, 190, 190, 180, 170, 170, 160, 160, 150}, {3240, 650, 620, 600, 580, 560, 540, 520, 500, 480, 470, 450, 430, 420, 400, 390, 370, 360, 350, 330, 320}, {5260, 1050, 1010, 980, 940, 910, 880, 840, 810, 780, 760, 730, 700, 680, 650, 630, 610, 580, 560, 540, 520}, {7600, 1520, 1470, 1410, 1360, 1310, 1270, 1220, 1180, 1130, 1090, 1050, 1020, 980, 940, 910, 880, 850, 810, 790, 760}, {10320, 2060, 1990, 1920, 1850, 1780, 1720, 1660, 1600, 1540, 1480, 1430, 1380, 1330, 1280, 1230, 1190, 1150, 1110, 1070, 1030}, {13470, 2690, 2600, 2500, 2410, 2330, 2240, 2160, 2080, 2010, 1940, 1870, 1800, 1730, 1670, 1610, 1550, 1500, 1440, 1390, 1340}, {17120, 3420, 3300, 3180, 3070, 2960, 2850, 2750, 2650, 2550, 2460, 2370, 2290, 2210, 2130, 2050, 1980, 1900, 1840, 1770, 1710}, {21360, 4270, 4120, 3970, 3830, 3690, 3560, 3430, 3310, 3190, 3070, 2960, 2850, 2750, 2650, 2560, 2460, 2380, 2290, 2210, 2130}, {26280, 5260, 5070, 4880, 4710, 4540, 4380, 4220, 4070, 3920, 3780, 3640, 3510, 3380, 3260, 3150, 3030, 2920, 2820, 2720, 2620}, {31980, 6400, 6170, 5940, 5730, 5520, 5330, 5130, 4950, 4770, 4600, 4430, 4270, 4120, 3970, 3830, 3690, 3560, 3430, 3310, 3190}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{8000, 1600, 1540, 1490, 1430, 1380, 1330, 1280, 1240, 1190, 1150, 1110, 1070, 1030, 990, 960, 920, 890, 860, 830, 800}, {10780, 2160, 2080, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1160, 1110, 1070}, {14000, 2800, 2700, 2600, 2510, 2420, 2330, 2250, 2170, 2090, 2010, 1940, 1870, 1800, 1740, 1680, 1620, 1560, 1500, 1450, 1400}, {17750, 3550, 3420, 3300, 3180, 3060, 2950, 2850, 2750, 2650, 2550, 2460, 2370, 2290, 2200, 2120, 2050, 1970, 1900, 1830, 1770}, {22080, 4420, 4260, 4100, 3960, 3810, 3680, 3540, 3420, 3290, 3180, 3060, 2950, 2840, 2740, 2640, 2550, 2460, 2370, 2280, 2200}, {27120, 5420, 5230, 5040, 4860, 4680, 4520, 4350, 4200, 4040, 3900, 3760, 3620, 3490, 3370, 3250, 3130, 3020, 2910, 2800, 2700}, {32960, 6590, 6350, 6130, 5900, 5690, 5490, 5290, 5100, 4920, 4740, 4570, 4400, 4250, 4090, 3950, 3800, 3670, 3530, 3410, 3280}, {39730, 7950, 7660, 7380, 7120, 6860, 6620, 6380, 6150, 5930, 5710, 5510, 5310, 5120, 4930, 4760, 4580, 4420, 4260, 4110, 3960}, {47590, 9520, 9170, 8840, 8530, 8220, 7920, 7640, 7360, 7100, 6840, 6600, 6360, 6130, 5910, 5700, 5490, 5290, 5100, 4920, 4740}, {56700, 11340, 10930, 10540, 10160, 9790, 9440, 9100, 8770, 8460, 8150, 7860, 7580, 7300, 7040, 6790, 6540, 6310, 6080, 5860, 5650}, {67270, 13450, 12970, 12500, 12050, 11620, 11200, 10800, 10410, 10030, 9670, 9320, 8990, 8670, 8350, 8050, 7760, 7480, 7210, 6950, 6700}, {79540, 15910, 15330, 14780, 14250, 13740, 13240, 12770, 12310, 11860, 11440, 11020, 10630, 10250, 9880, 9520, 9180, 8850, 8530, 8220, 7930}, {93760, 18750, 18080, 17430, 16800, 16190, 15610, 15050, 14510, 13990, 13480, 13000, 12530, 12080, 11640, 11220, 10820, 10430, 10050, 9690, 9340}, {110270, 22050, 21260, 20490, 19760, 19040, 18360, 17700, 17060, 16450, 15850, 15280, 14730, 14200, 13690, 13200, 12720, 12270, 11820, 11400, 10990}, {129410, 25880, 24950, 24050, 23190, 22350, 21550, 20770, 20020, 19300, 18610, 17940, 17290, 16670, 16070, 15490, 14930, 14400, 13880, 13380, 12900}, {151610, 30320, 29230, 28180, 27160, 26190, 25240, 24330, 23460, 22610, 21800, 21020, 20260, 19530, 18830, 18150, 17500, 16870, 16260, 15670, 15110}, {177370, 35470, 34200, 32970, 31780, 30640, 29530, 28470, 27440, 26460, 25500, 24590, 23700, 22850, 22020, 21230, 20470, 19730, 19020, 18340, 17680}, {207250, 41450, 39960, 38520, 37130, 35800, 34510, 33270, 32070, 30910, 29800, 28730, 27690, 26700, 25740, 24810, 23920, 23050, 22220, 21420, 20650}, {241910, 48380, 46640, 44960, 43340, 41780, 40280, 38830, 37430, 36080, 34780, 33530, 32320, 31160, 30040, 28960, 27920, 26910, 25940, 25010, 24110}, {282120, 56420, 54390, 52430, 50550, 48730, 46970, 45280, 43650, 42080, 40570, 39100, 37700, 36340, 35030, 33770, 32550, 31380, 30250, 29160, 28110}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{9000, 1800, 1740, 1670, 1610, 1550, 1500, 1440, 1390, 1340, 1290, 1250, 1200, 1160, 1120, 1080, 1040, 1000, 970, 930, 900}, {11940, 2390, 2300, 2220, 2140, 2060, 1990, 1920, 1850, 1780, 1720, 1660, 1600, 1540, 1480, 1430, 1380, 1330, 1280, 1230, 1190}, {15350, 3070, 2960, 2850, 2750, 2650, 2560, 2460, 2380, 2290, 2210, 2130, 2050, 1980, 1910, 1840, 1770, 1710, 1650, 1590, 1530}, {19310, 3860, 3720, 3590, 3460, 3330, 3210, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1920}, {23900, 4780, 4610, 4440, 4280, 4130, 3980, 3840, 3700, 3560, 3440, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560, 2470, 2380}, {29220, 5840, 5630, 5430, 5240, 5050, 4860, 4690, 4520, 4360, 4200, 4050, 3900, 3760, 3630, 3500, 3370, 3250, 3130, 3020, 2910}, {35390, 7080, 6820, 6580, 6340, 6110, 5890, 5680, 5480, 5280, 5090, 4910, 4730, 4560, 4390, 4240, 4080, 3940, 3800, 3660, 3530}, {42560, 8510, 8200, 7910, 7620, 7350, 7090, 6830, 6580, 6350, 6120, 5900, 5690, 5480, 5280, 5090, 4910, 4730, 4560, 4400, 4240}, {50870, 10170, 9810, 9450, 9110, 8790, 8470, 8160, 7870, 7590, 7310, 7050, 6800, 6550, 6320, 6090, 5870, 5660, 5450, 5260, 5070}, {60500, 12100, 11670, 11250, 10840, 10450, 10070, 9710, 9360, 9020, 8700, 8390, 8080, 7790, 7510, 7240, 6980, 6730, 6490, 6250, 6030}, {71690, 14340, 13820, 13320, 12840, 12380, 11940, 11510, 11090, 10690, 10310, 9940, 9580, 9230, 8900, 8580, 8270, 7970, 7690, 7410, 7140}, {84650, 16930, 16320, 15730, 15170, 14620, 14100, 13590, 13100, 12630, 12170, 11730, 11310, 10900, 10510, 10130, 9770, 9420, 9080, 8750, 8440}, {99700, 19940, 19220, 18530, 17860, 17220, 16600, 16000, 15430, 14870, 14340, 13820, 13320, 12840, 12380, 11930, 11500, 11090, 10690, 10310, 9940}, {117150, 23430, 22590, 21770, 20990, 20230, 19510, 18800, 18130, 17470, 16840, 16240, 15650, 15090, 14550, 14020, 13520, 13030, 12560, 12110, 11670}, {137400, 27480, 26490, 25540, 24620, 23730, 22880, 22050, 21260, 20490, 19760, 19040, 18360, 17700, 17060, 16450, 15850, 15280, 14730, 14200, 13690}, {160880, 32180, 31020, 29900, 28820, 27790, 26790, 25820, 24890, 24000, 23130, 22300, 21500, 20720, 19980, 19260, 18560, 17900, 17250, 16630, 16030}, {188120, 37620, 36270, 34960, 33710, 32490, 31320, 30190, 29110, 28060, 27050, 26080, 25140, 24230, 23360, 22520, 21710, 20930, 20170, 19450, 18750}, {219720, 43940, 42360, 40840, 39370, 37950, 36580, 35270, 34000, 32770, 31590, 30460, 29360, 28300, 27280, 26300, 25350, 24440, 23560, 22710, 21900}, {256370, 51270, 49430, 47650, 45930, 44280, 42690, 41150, 39670, 38240, 36860, 35540, 34260, 33020, 31840, 30690, 29580, 28520, 27490, 26500, 25550}, {298890, 59780, 57630, 55550, 53550, 51620, 49770, 47970, 46250, 44580, 42980, 41430, 39940, 38500, 37110, 35780, 34490, 33250, 32050, 30900, 29790}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{25000, 5000, 4820, 4650, 4480, 4320, 4160, 4010, 3870, 3730, 3590, 3470, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490}, {30500, 6100, 5880, 5670, 5460, 5270, 5080, 4900, 4720, 4550, 4390, 4230, 4080, 3930, 3790, 3650, 3520, 3390, 3270, 3150, 3040}, {36880, 7380, 7110, 6850, 6610, 6370, 6140, 5920, 5710, 5500, 5300, 5110, 4930, 4750, 4580, 4410, 4260, 4100, 3950, 3810, 3680}, {44280, 8860, 8540, 8230, 7930, 7650, 7370, 7110, 6850, 6600, 6370, 6140, 5920, 5700, 5500, 5300, 5110, 4930, 4750, 4580, 4410}, {52870, 10570, 10190, 9830, 9470, 9130, 8800, 8490, 8180, 7890, 7600, 7330, 7060, 6810, 6560, 6330, 6100, 5880, 5670, 5470, 5270}, {62820, 12560, 12110, 11680, 11260, 10850, 10460, 10080, 9720, 9370, 9030, 8710, 8390, 8090, 7800, 7520, 7250, 6990, 6740, 6490, 6260}, {74380, 14880, 14340, 13820, 13330, 12850, 12380, 11940, 11510, 11090, 10690, 10310, 9940, 9580, 9240, 8900, 8580, 8270, 7980, 7690, 7410}, {87780, 17560, 16920, 16310, 15730, 15160, 14610, 14090, 13580, 13090, 12620, 12170, 11730, 11310, 10900, 10510, 10130, 9760, 9410, 9070, 8750}, {103320, 20660, 19920, 19200, 18510, 17850, 17200, 16580, 15990, 15410, 14860, 14320, 13810, 13310, 12830, 12370, 11920, 11490, 11080, 10680, 10300}, {121350, 24270, 23400, 22550, 21740, 20960, 20210, 19480, 18780, 18100, 17450, 16820, 16220, 15630, 15070, 14530, 14000, 13500, 13010, 12540, 12090}, {142270, 28450, 27430, 26440, 25490, 24570, 23690, 22830, 22010, 21220, 20460, 19720, 19010, 18330, 17670, 17030, 16420, 15830, 15260, 14710, 14180}, {166530, 33310, 32110, 30950, 29840, 28760, 27730, 26730, 25770, 24840, 23950, 23080, 22250, 21450, 20680, 19930, 19220, 18520, 17860, 17220, 16600}, {194680, 38940, 37530, 36180, 34880, 33620, 32410, 31250, 30120, 29040, 27990, 26980, 26010, 25080, 24170, 23300, 22460, 21660, 20880, 20120, 19400}, {227320, 45460, 43830, 42250, 40730, 39260, 37850, 36490, 35170, 33910, 32690, 31510, 30380, 29280, 28230, 27210, 26230, 25290, 24380, 23500, 22650}, {265200, 53040, 51130, 49290, 47510, 45800, 44160, 42570, 41030, 39560, 38130, 36760, 35440, 34160, 32930, 31740, 30600, 29500, 28440, 27410, 26430}, {309130, 61830, 59600, 57450, 55390, 53390, 51470, 49620, 47830, 46110, 44450, 42850, 41310, 39820, 38390, 37000, 35670, 34390, 33150, 31960, 30810}, {360090, 72020, 69420, 66930, 64520, 62190, 59950, 57800, 55720, 53710, 51780, 49910, 48120, 46380, 44710, 43100, 41550, 40060, 38610, 37220, 35880}, {419200, 83840, 80820, 77910, 75110, 72400, 69800, 67280, 64860, 62530, 60280, 58110, 56010, 54000, 52050, 50180, 48370, 46630, 44950, 43340, 41780}, {487770, 97550, 94040, 90660, 87390, 84250, 81210, 78290, 75470, 72760, 70140, 67610, 65180, 62830, 60570, 58390, 56290, 54260, 52310, 50420, 48610}, {567320, 113460, 109380, 105440, 101650, 97990, 94460, 91060, 87780, 84620, 81570, 78640, 75810, 73080, 70450, 67910, 65470, 63110, 60840, 58650, 56540}},
    {{11000, 2200, 2120, 2040, 1970, 1900, 1830, 1770, 1700, 1640, 1580, 1520, 1470, 1420, 1370, 1320, 1270, 1220, 1180, 1140, 1100}, {15760, 3150, 3040, 2930, 2820, 2720, 2620, 2530, 2440, 2350, 2270, 2180, 2110, 2030, 1960, 1890, 1820, 1750, 1690, 1630, 1570}, {21280, 4260, 4100, 3960, 3810, 3680, 3540, 3420, 3290, 3170, 3060, 2950, 2840, 2740, 2640, 2550, 2460, 2370, 2280, 2200, 2120}, {27690, 5540, 5340, 5150, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3840, 3700, 3570, 3440, 3310, 3190, 3080, 2970, 2860, 2760}, {35120, 7020, 6770, 6530, 6290, 6070, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520, 4360, 4200, 4050, 3910, 3770, 3630, 3500}, {43740, 8750, 8430, 8130, 7840, 7550, 7280, 7020, 6770, 6520, 6290, 6060, 5840, 5630, 5430, 5240, 5050, 4870, 4690, 4520, 4360}, {53730, 10750, 10360, 9990, 9630, 9280, 8950, 8620, 8310, 8010, 7730, 7450, 7180, 6920, 6670, 6430, 6200, 5980, 5760, 5550, 5350}, {65330, 13070, 12600, 12140, 11710, 11280, 10880, 10490, 10110, 9740, 9390, 9060, 8730, 8420, 8110, 7820, 7540, 7270, 7010, 6750, 6510}, {78780, 15760, 15190, 14640, 14120, 13610, 13120, 12650, 12190, 11750, 11330, 10920, 10530, 10150, 9780, 9430, 9090, 8760, 8450, 8140, 7850}, {94390, 18880, 18200, 17540, 16910, 16300, 15720, 15150, 14600, 14080, 13570, 13080, 12610, 12160, 11720, 11300, 10890, 10500, 10120, 9760, 9410}, {112490, 22500, 21690, 20910, 20150, 19430, 18730, 18060, 17410, 16780, 16170, 15590, 15030, 14490, 13970, 13470, 12980, 12510, 12060, 11630, 11210}, {133490, 26700, 25740, 24810, 23920, 23060, 22230, 21430, 20650, 19910, 19190, 18500, 17840, 17190, 16580, 15980, 15400, 14850, 14310, 13800, 13300}, {157850, 31570, 30430, 29340, 28280, 27260, 26280, 25340, 24420, 23540, 22700, 21880, 21090, 20330, 19600, 18890, 18210, 17560, 16930, 16320, 15730}, {186100, 37220, 35880, 34590, 33340, 32140, 30990, 29870, 28800, 27760, 26760, 25800, 24870, 23970, 23110, 22280, 21480, 20700, 19960, 19240, 18550}, {218880, 43780, 42200, 40680, 39220, 37800, 36440, 35130, 33870, 32650, 31470, 30340, 29250, 28190, 27180, 26200, 25260, 24350, 23470, 22630, 21810}, {256900, 51380, 49530, 47750, 46030, 44370, 42770, 41230, 39750, 38320, 36940, 35610, 34330, 33090, 31900, 30750, 29640, 28580, 27550, 26560, 25600}, {301000, 60200, 58030, 55940, 53930, 51990, 50120, 48310, 46570, 44900, 43280, 41720, 40220, 38770, 37380, 36030, 34730, 33480, 32280, 31120, 30000}, {352160, 70430, 67900, 65450, 63100, 60830, 58640, 56520, 54490, 52530, 50640, 48810, 47060, 45360, 43730, 42160, 40640, 39170, 37760, 36410, 35090}, {411510, 82300, 79340, 76480, 73730, 71080, 68520, 66050, 63670, 61380, 59170, 57040, 54990, 53010, 51100, 49260, 47490, 45780, 44130, 42540, 41010}, {480350, 96070, 92610, 89280, 86060, 82970, 79980, 77100, 74320, 71650, 69070, 66580, 64190, 61870, 59650, 57500, 55430, 53430, 51510, 49660, 47870}},
    {{40000, 8000, 7710, 7430, 7170, 6910, 6660, 6420, 6190, 5970, 5750, 5540, 5340, 5150, 4970, 4790, 4620, 4450, 4290, 4140, 3990}, {47900, 9580, 9240, 8900, 8580, 8270, 7980, 7690, 7410, 7140, 6890, 6640, 6400, 6170, 5950, 5730, 5530, 5330, 5140, 4950, 4770}, {57060, 11410, 11000, 10610, 10220, 9860, 9500, 9160, 8830, 8510, 8210, 7910, 7620, 7350, 7090, 6830, 6580, 6350, 6120, 5900, 5690}, {67690, 13540, 13050, 12580, 12130, 11690, 11270, 10870, 10470, 10100, 9730, 9380, 9050, 8720, 8410, 8100, 7810, 7530, 7260, 7000, 6750}, {80030, 16010, 15430, 14870, 14340, 13820, 13320, 12840, 12380, 11940, 11510, 11090, 10690, 10310, 9940, 9580, 9230, 8900, 8580, 8270, 7970}, {94330, 18870, 18190, 17530, 16900, 16290, 15710, 15140, 14600, 14070, 13560, 13080, 12600, 12150, 11710, 11290, 10890, 10490, 10120, 9750, 9400}, {110920, 22180, 21390, 20620, 19870, 19160, 18470, 17800, 17160, 16540, 15950, 15380, 14820, 14290, 13770, 13280, 12800, 12340, 11890, 11470, 11050}, {130170, 26030, 25100, 24190, 23320, 22480, 21670, 20890, 20140, 19420, 18720, 18040, 17390, 16770, 16160, 15580, 15020, 14480, 13960, 13460, 12970}, {152500, 30500, 29400, 28340, 27320, 26340, 25390, 24480, 23600, 22750, 21930, 21140, 20380, 19640, 18940, 18250, 17600, 16960, 16350, 15760, 15200}, {178400, 35680, 34390, 33160, 31960, 30810, 29700, 28630, 27600, 26610, 25650, 24730, 23840, 22980, 22150, 21350, 20590, 19840, 19130, 18440, 17780}, {208440, 41690, 40190, 38740, 37350, 36000, 34710, 33460, 32250, 31090, 29970, 28890, 27850, 26850, 25880, 24950, 24050, 23190, 22350, 21550, 20770}, {243290, 48660, 46910, 45220, 43590, 42020, 40510, 39050, 37640, 36290, 34980, 33720, 32510, 31340, 30210, 29120, 28070, 27060, 26090, 25150, 24240}, {283720, 56740, 54700, 52730, 50830, 49000, 47240, 45540, 43900, 42320, 40800, 39330, 37910, 36550, 35230, 33960, 32740, 31560, 30420, 29330, 28270}, {330610, 66120, 63740, 61450, 59230, 57100, 55050, 53070, 51150, 49310, 47540, 45830, 44180, 42590, 41050, 39580, 38150, 36780, 35450, 34180, 32950}, {385010, 77000, 74230, 71560, 68980, 66500, 64100, 61800, 59570, 57430, 55360, 53370, 51450, 49590, 47810, 46090, 44430, 42830, 41290, 39800, 38370}, {448110, 89620, 86400, 83290, 80290, 77400, 74610, 71920, 69340, 66840, 64430, 62110, 59880, 57720, 55640, 53640, 51710, 49850, 48050, 46320, 44660}, {521310, 104260, 100510, 96890, 93400, 90040, 86800, 83670, 80660, 77760, 74960, 72260, 69660, 67150, 64730, 62400, 60160, 57990, 55900, 53890, 51950}, {606220, 121240, 116880, 112670, 108610, 104700, 100940, 97300, 93800, 90420, 87170, 84030, 81000, 78090, 75280, 72570, 69950, 67440, 65010, 62670, 60410}, {704710, 140940, 135870, 130980, 126260, 121720, 117330, 113110, 109040, 105110, 101330, 97680, 94160, 90770, 87510, 84360, 81320, 78390, 75570, 72850, 70230}, {818970, 163790, 157900, 152210, 146730, 141450, 136360, 131450, 126720, 122160, 117760, 113520, 109430, 105490, 101690, 98030, 94500, 91100, 87820, 84660, 81610}},
    {{62500, 12500, 12050, 11620, 11200, 10790, 10410, 10030, 9670, 9320, 8990, 8660, 8350, 8050, 7760, 7480, 7210, 6950, 6700, 6460, 6230}, {74000, 14800, 14270, 13750, 13260, 12780, 12320, 11880, 11450, 11040, 10640, 10260, 9890, 9530, 9190, 8860, 8540, 8230, 7940, 7650, 7370}, {87340, 17470, 16840, 16230, 15650, 15090, 14540, 14020, 13510, 13030, 12560, 12110, 11670, 11250, 10850, 10450, 10080, 9720, 9370, 9030, 8700}, {102810, 20560, 19820, 19110, 18420, 17760, 17120, 16500, 15910, 15340, 14780, 14250, 13740, 13240, 12770, 12310, 11860, 11440, 11030, 10630, 10250}, {120760, 24150, 23280, 22450, 21640, 20860, 20110, 19380, 18690, 18010, 17360, 16740, 16140, 15560, 15000, 14460, 13940, 13430, 12950, 12480, 12030}, {141590, 28320, 27300, 26320, 25370, 24450, 23570, 22730, 21910, 21120, 20360, 19630, 18920, 18240, 17580, 16950, 16340, 15750, 15180, 14640, 14110}, {165740, 33150, 31950, 30800, 29700, 28630, 27600, 26600, 25640, 24720, 23830, 22970, 22150, 21350, 20580, 19840, 19130, 18440, 17770, 17130, 16520}, {193760, 38750, 37360, 36010, 34720, 33470, 32260, 31100, 29980, 28900, 27860, 26860, 25890, 24960, 24060, 23190, 22360, 21550, 20780, 20030, 19310}, {226260, 45250, 43620, 42050, 40540, 39080, 37670, 36320, 35010, 33750, 32530, 31360, 30230, 29150, 28100, 27080, 26110, 25170, 24260, 23390, 22550}, {263960, 52790, 50890, 49060, 47290, 45590, 43950, 42370, 40840, 39370, 37950, 36590, 35270, 34000, 32780, 31600, 30460, 29360, 28310, 27290, 26300}, {307700, 61540, 59320, 57190, 55130, 53140, 51230, 49390, 47610, 45900, 44240, 42650, 41120, 39630, 38210, 36830, 35510, 34230, 33000, 31810, 30660}, {358430, 71690, 69100, 66620, 64220, 61910, 59680, 57530, 55460, 53460, 51540, 49680, 47890, 46170, 44510, 42910, 41360, 39870, 38440, 37050, 35720}, {417280, 83460, 80450, 77550, 74760, 72070, 69480, 66980, 64560, 62240, 60000, 57840, 55760, 53750, 51820, 49950, 48150, 46420, 44750, 43140, 41580}, {485540, 97110, 93610, 90240, 86990, 83860, 80840, 77930, 75130, 72420, 69820, 67300, 64880, 62540, 60290, 58120, 56030, 54010, 52070, 50190, 48390}, {564730, 112950, 108880, 104960, 101180, 97540, 94030, 90640, 87380, 84230, 81200, 78280, 75460, 72740, 70120, 67600, 65170, 62820, 60560, 58380, 56280}, {656580, 131320, 126590, 122030, 117640, 113400, 109320, 105390, 101590, 97930, 94410, 91010, 87730, 84580, 81530, 78600, 75770, 73040, 70410, 67870, 65430}, {763140, 152630, 147130, 141840, 136730, 131810, 127060, 122490, 118080, 113830, 109730, 105780, 101970, 98300, 94760, 91350, 88060, 84890, 81840, 78890, 76050}, {886740, 177350, 170960, 164810, 158880, 153160, 147640, 142330, 137200, 132260, 127500, 122910, 118490, 114220, 110110, 106150, 102320, 98640, 95090, 91670, 88370}, {1030120, 206020, 198610, 191460, 184560, 177920, 171520, 165340, 159390, 153650, 148120, 142790, 137650, 132690, 127910, 123310, 118870, 114590, 110470, 106490, 102660}, {1196440, 239290, 230670, 222370, 214360, 206650, 199210, 192040, 185120, 178460, 172030, 165840, 159870, 154110, 148570, 143220, 138060, 133090, 128300, 123680, 119230}},
    {{15000, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080, 2000, 1930, 1860, 1800, 1730, 1670, 1610, 1550, 1490}, {18900, 3780, 3640, 3510, 3390, 3260, 3150, 3030, 2920, 2820, 2720, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880}, {23420, 4680, 4520, 4350, 4200, 4050, 3900, 3760, 3620, 3490, 3370, 3250, 3130, 3020, 2910, 2800, 2700, 2610, 2510, 2420, 2330}, {28670, 5730, 5530, 5330, 5140, 4950, 4770, 4600, 4440, 4280, 4120, 3970, 3830, 3690, 3560, 3430, 3310, 3190, 3070, 2960, 2860}, {34760, 6950, 6700, 6460, 6230, 6000, 5790, 5580, 5380, 5180, 5000, 4820, 4640, 4480, 4320, 4160, 4010, 3870, 3730, 3590, 3460}, {41820, 8360, 8060, 7770, 7490, 7220, 6960, 6710, 6470, 6240, 6010, 5800, 5590, 5390, 5190, 5010, 4830, 4650, 4480, 4320, 4170}, {50010, 10000, 9640, 9300, 8960, 8640, 8330, 8030, 7740, 7460, 7190, 6930, 6680, 6440, 6210, 5990, 5770, 5560, 5360, 5170, 4980}, {59510, 11900, 11470, 11060, 10660, 10280, 9910, 9550, 9210, 8880, 8560, 8250, 7950, 7670, 7390, 7120, 6870, 6620, 6380, 6150, 5930}, {70540, 14110, 13600, 13110, 12640, 12180, 11740, 11320, 10910, 10520, 10140, 9780, 9430, 9090, 8760, 8440, 8140, 7850, 7560, 7290, 7030}, {83320, 16660, 16060, 15490, 14930, 14390, 13870, 13370, 12890, 12430, 11980, 11550, 11130, 10730, 10350, 9970, 9610, 9270, 8940, 8610, 8300}, {98150, 19630, 18920, 18240, 17590, 16950, 16340, 15750, 15190, 14640, 14110, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530, 10150, 9780}, {115360, 23070, 22240, 21440, 20670, 19920, 19210, 18520, 17850, 17210, 16590, 15990, 15410, 14860, 14320, 13810, 13310, 12830, 12370, 11930, 11500}, {135320, 27060, 26090, 25150, 24240, 23370, 22530, 21720, 20940, 20180, 19460, 18760, 18080, 17430, 16800, 16200, 15610, 15050, 14510, 13990, 13480}, {158470, 31690, 30550, 29450, 28390, 27370, 26380, 25430, 24520, 23640, 22790, 21970, 21170, 20410, 19680, 18970, 18290, 17630, 16990, 16380, 15790}, {185320, 37060, 35730, 34440, 33200, 32010, 30860, 29750, 28670, 27640, 26650, 25690, 24760, 23870, 23010, 22180, 21390, 20620, 19870, 19160, 18470}, {216470, 43290, 41740, 40230, 38780, 37390, 36040, 34750, 33490, 32290, 31130, 30010, 28930, 27880, 26880, 25910, 24980, 24080, 23210, 22380, 21570}, {252610, 50520, 48700, 46950, 45260, 43630, 42060, 40550, 39090, 37680, 36320, 35010, 33750, 32540, 31370, 30240, 29150, 28100, 27090, 26110, 25170}, {294520, 58900, 56780, 54740, 52770, 50870, 49040, 47270, 45570, 43930, 42350, 40820, 39350, 37940, 36570, 35260, 33990, 32760, 31580, 30450, 29350}, {343150, 68630, 66160, 63780, 61480, 59270, 57130, 55080, 53090, 51180, 49340, 47560, 45850, 44200, 42610, 41080, 39600, 38170, 36800, 35470, 34200}, {399550, 79910, 77030, 74260, 71590, 69010, 66530, 64130, 61820, 59600, 57450, 55380, 53390, 51470, 49610, 47830, 46110, 44450, 42850, 41300, 39820}},
    {{35000, 7000, 6750, 6510, 6270, 6050, 5830, 5620, 5420, 5220, 5030, 4850, 4680, 4510, 4350, 4190, 4040, 3890, 3750, 3620, 3490}, {42100, 8420, 8120, 7820, 7540, 7270, 7010, 6760, 6510, 6280, 6050, 5840, 5630, 5420, 5230, 5040, 4860, 4680, 4510, 4350, 4200}, {50340, 10070, 9700, 9360, 9020, 8690, 8380, 8080, 7790, 7510, 7240, 6980, 6730, 6480, 6250, 6030, 5810, 5600, 5400, 5200, 5020}, {59890, 11980, 11550, 11130, 10730, 10340, 9970, 9610, 9270, 8930, 8610, 8300, 8000, 7710, 7440, 7170, 6910, 6660, 6420, 6190, 5970}, {70970, 14190, 13680, 13190, 12720, 12260, 11820, 11390, 10980, 10590, 10200, 9840, 9480, 9140, 8810, 8500, 8190, 7890, 7610, 7340, 7070}, {83830, 16770, 16160, 15580, 15020, 14480, 13960, 13450, 12970, 12500, 12050, 11620, 11200, 10800, 10410, 10030, 9670, 9330, 8990, 8670, 8350}, {98740, 19750, 19040, 18350, 17690, 17050, 16440, 15850, 15280, 14730, 14200, 13690, 13190, 12720, 12260, 11820, 11390, 10980, 10590, 10210, 9840}, {116040, 23210, 22370, 21570, 20790, 20040, 19320, 18620, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560}, {136100, 27220, 26240, 25300, 24390, 23510, 22660, 21850, 21060, 20300, 19570, 18870, 18190, 17530, 16900, 16290, 15710, 15140, 14600, 14070, 13560}, {159380, 31880, 30730, 29620, 28560, 27530, 26540, 25580, 24660, 23770, 22920, 22090, 21300, 20530, 19790, 19080, 18390, 17730, 17090, 16480, 15880}, {186380, 37280, 35930, 34640, 33390, 32190, 31030, 29920, 28840, 27800, 26800, 25830, 24900, 24010, 23140, 22310, 21510, 20730, 19990, 19270, 18570}, {217700, 43540, 41970, 40460, 39010, 37600, 36250, 34940, 33680, 32470, 31300, 30180, 29090, 28040, 27030, 26060, 25120, 24220, 23350, 22510, 21690}, {254040, 50810, 48980, 47210, 45520, 43880, 42300, 40770, 39310, 37890, 36530, 35210, 33940, 32720, 31540, 30410, 29310, 28260, 27240, 26260, 25320}, {296180, 59240, 57100, 55050, 53070, 51160, 49310, 47540, 45830, 44180, 42590, 41050, 39580, 38150, 36780, 35450, 34180, 32950, 31760, 30620, 29520}, {345070, 69010, 66530, 64130, 61830, 59600, 57450, 55390, 53390, 51470, 49620, 47830, 46110, 44450, 42850, 41310, 39820, 38390, 37000, 35670, 34390}, {401780, 80360, 77460, 74670, 71990, 69400, 66900, 64490, 62170, 59930, 57770, 55690, 53690, 51750, 49890, 48090, 46360, 44690, 43090, 41530, 40040}, {467570, 93510, 90150, 86900, 83770, 80760, 77850, 75050, 72350, 69740, 67230, 64810, 62480, 60230, 58060, 55970, 53950, 52010, 50140, 48330, 46590}, {543880, 108780, 104860, 101080, 97450, 93940, 90560, 87300, 84150, 81120, 78200, 75390, 72670, 70060, 67540, 65100, 62760, 60500, 58320, 56220, 54200}, {632400, 126480, 121930, 117540, 113310, 109230, 105290, 101500, 97850, 94330, 90930, 87660, 84500, 81460, 78530, 75700, 72980, 70350, 67820, 65370, 63020}, {735080, 147020, 141720, 136620, 131700, 126960, 122390, 117990, 113740, 109640, 105700, 101890, 98220, 94690, 91280, 87990, 84820, 81770, 78830, 75990, 73250}},
    {{45000, 9000, 8680, 8360, 8060, 7770, 7490, 7220, 6960, 6710, 6470, 6240, 6010, 5800, 5590, 5390, 5190, 5010, 4830, 4650, 4480}, {53700, 10740, 10350, 9980, 9620, 9270, 8940, 8620, 8310, 8010, 7720, 7440, 7180, 6920, 6670, 6430, 6200, 5970, 5760, 5550, 5350}, {63790, 12760, 12300, 11860, 11430, 11020, 10620, 10240, 9870, 9520, 9170, 8840, 8520, 8220, 7920, 7640, 7360, 7100, 6840, 6590, 6360}, {75500, 15100, 14560, 14030, 13530, 13040, 12570, 12120, 11680, 11260, 10860, 10470, 10090, 9730, 9370, 9040, 8710, 8400, 8100, 7800, 7520}, {89080, 17820, 17170, 16560, 15960, 15390, 14830, 14300, 13780, 13290, 12810, 12350, 11900, 11470, 11060, 10660, 10280, 9910, 9550, 9210, 8880}, {104830, 20970, 20210, 19480, 18780, 18110, 17450, 16830, 16220, 15640, 15070, 14530, 14010, 13500, 13020, 12550, 12100, 11660, 11240, 10840, 10450}, {123100, 24620, 23730, 22880, 22060, 21260, 20500, 19760, 19050, 18360, 17700, 17060, 16450, 15860, 15290, 14740, 14210, 13690, 13200, 12730, 12270}, {144300, 28860, 27820, 26820, 25850, 24920, 24030, 23160, 22330, 21520, 20750, 20000, 19280, 18590, 17920, 17270, 16650, 16050, 15470, 14920, 14380}, {168890, 33780, 32560, 31390, 30260, 29170, 28120, 27110, 26130, 25190, 24280, 23410, 22570, 21750, 20970, 20220, 19490, 18790, 18110, 17460, 16830}, {197410, 39480, 38060, 36690, 35370, 34100, 32870, 31690, 30550, 29450, 28390, 27360, 26380, 25430, 24510, 23630, 22780, 21960, 21170, 20410, 19670}, {230500, 46100, 44440, 42840, 41300, 39810, 38380, 37000, 35660, 34380, 33140, 31950, 30800, 29690, 28620, 27590, 26600, 25640, 24720, 23830, 22970}, {268880, 53780, 51840, 49970, 48170, 46440, 44770, 43160, 41600, 40110, 38660, 37270, 35930, 34630, 33390, 32190, 31030, 29910, 28830, 27800, 26790}, {313400, 62680, 60420, 58250, 56150, 54130, 52180, 50300, 48490, 46750, 45060, 43440, 41880, 40370, 38920, 37510, 36160, 34860, 33610, 32400, 31230}, {365040, 73010, 70380, 67850, 65400, 63050, 60780, 58590, 56480, 54450, 52490, 50600, 48780, 47020, 45330, 43700, 42120, 40610, 39150, 37740, 36380}, {424950, 84990, 81930, 78980, 76140, 73400, 70750, 68210, 65750, 63380, 61100, 58900, 56780, 54740, 52770, 50870, 49040, 47270, 45570, 43930, 42350}, {494440, 98890, 95330, 91900, 88590, 85400, 82320, 79360, 76500, 73750, 71090, 68530, 66070, 63690, 61400, 59190, 57060, 55000, 53020, 51110, 49270}, {575050, 115010, 110870, 106880, 103030, 99320, 95750, 92300, 88980, 85770, 82690, 79710, 76840, 74070, 71410, 68840, 66360, 63970, 61670, 59450, 57310}, {668560, 133710, 128900, 124260, 119780, 115470, 111310, 107310, 103440, 99720, 96130, 92670, 89330, 86120, 83020, 80030, 77150, 74370, 71690, 69110, 66620}, {777020, 155400, 149810, 144420, 139220, 134210, 129370, 124720, 120230, 115900, 111730, 107700, 103830, 100090, 96490, 93010, 89660, 86440, 83320, 80330, 77430}, {902850, 180570, 174070, 167800, 161760, 155940, 150320, 144910, 139700, 134670, 129820, 125150, 120640, 116300, 112110, 108070, 104180, 100430, 96820, 93330, 89970}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{11500, 2300, 2220, 2140, 2060, 1990, 1910, 1850, 1780, 1720, 1650, 1590, 1540, 1480, 1430, 1380, 1330, 1280, 1230, 1190, 1150}, {13340, 2670, 2570, 2480, 2390, 2300, 2220, 2140, 2060, 1990, 1920, 1850, 1780, 1720, 1660, 1600, 1540, 1480, 1430, 1380, 1330}, {15470, 3090, 2980, 2880, 2770, 2670, 2580, 2480, 2390, 2310, 2230, 2140, 2070, 1990, 1920, 1850, 1790, 1720, 1660, 1600, 1540}, {17950, 3590, 3460, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1920, 1860, 1790}, {20820, 4160, 4010, 3870, 3730, 3600, 3470, 3340, 3220, 3110, 2990, 2890, 2780, 2680, 2590, 2490, 2400, 2320, 2230, 2150, 2080}, {24150, 4830, 4660, 4490, 4330, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410}, {28020, 5600, 5400, 5210, 5020, 4840, 4670, 4500, 4340, 4180, 4030, 3880, 3740, 3610, 3480, 3350, 3230, 3120, 3000, 2900, 2790}, {32500, 6500, 6270, 6040, 5820, 5610, 5410, 5220, 5030, 4850, 4670, 4510, 4340, 4190, 4040, 3890, 3750, 3620, 3490, 3360, 3240}, {37700, 7540, 7270, 7010, 6750, 6510, 6280, 6050, 5830, 5620, 5420, 5230, 5040, 4860, 4680, 4510, 4350, 4190, 4040, 3900, 3760}, {43730, 8750, 8430, 8130, 7840, 7550, 7280, 7020, 6770, 6520, 6290, 6060, 5840, 5630, 5430, 5240, 5050, 4860, 4690, 4520, 4360}, {50730, 10150, 9780, 9430, 9090, 8760, 8450, 8140, 7850, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5060}, {58850, 11770, 11350, 10940, 10540, 10160, 9800, 9450, 9110, 8780, 8460, 8160, 7860, 7580, 7310, 7040, 6790, 6550, 6310, 6080, 5860}, {68260, 13650, 13160, 12690, 12230, 11790, 11370, 10960, 10560, 10180, 9820, 9460, 9120, 8790, 8480, 8170, 7880, 7590, 7320, 7060, 6800}, {79190, 15840, 15270, 14720, 14190, 13680, 13180, 12710, 12250, 11810, 11390, 10980, 10580, 10200, 9830, 9480, 9140, 8810, 8490, 8190, 7890}, {91860, 18370, 17710, 17070, 16460, 15870, 15290, 14740, 14210, 13700, 13210, 12730, 12270, 11830, 11410, 11000, 10600, 10220, 9850, 9500, 9150}, {106550, 21310, 20540, 19800, 19090, 18400, 17740, 17100, 16490, 15890, 15320, 14770, 14240, 13730, 13230, 12750, 12300, 11850, 11430, 11010, 10620}, {123600, 24720, 23830, 22970, 22150, 21350, 20580, 19840, 19120, 18440, 17770, 17130, 16520, 15920, 15350, 14800, 14260, 13750, 13250, 12780, 12320}, {143380, 28680, 27640, 26650, 25690, 24760, 23870, 23010, 22180, 21390, 20620, 19870, 19160, 18470, 17800, 17160, 16550, 15950, 15380, 14820, 14290}, {166320, 33260, 32070, 30910, 29800, 28730, 27690, 26700, 25730, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570}, {192930, 38590, 37200, 35860, 34570, 33320, 32120, 30970, 29850, 28780, 27740, 26740, 25780, 24850, 23960, 23090, 22260, 21460, 20690, 19940, 19230}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{11000, 2200, 2120, 2040, 1970, 1900, 1830, 1770, 1700, 1640, 1580, 1520, 1470, 1420, 1370, 1320, 1270, 1220, 1180, 1140, 1100}, {14260, 2850, 2750, 2650, 2550, 2460, 2370, 2290, 2210, 2130, 2050, 1980, 1910, 1840, 1770, 1710, 1650, 1590, 1530, 1470, 1420}, {18040, 3610, 3480, 3350, 3230, 3120, 3000, 2900, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080, 2010, 1930, 1870, 1800}, {22430, 4490, 4320, 4170, 4020, 3870, 3730, 3600, 3470, 3350, 3220, 3110, 3000, 2890, 2790, 2680, 2590, 2490, 2410, 2320, 2240}, {27520, 5500, 5310, 5110, 4930, 4750, 4580, 4420, 4260, 4100, 3960, 3810, 3680, 3540, 3420, 3290, 3180, 3060, 2950, 2840, 2740}, {33420, 6680, 6440, 6210, 5990, 5770, 5560, 5360, 5170, 4980, 4810, 4630, 4470, 4300, 4150, 4000, 3860, 3720, 3580, 3450, 3330}, {40270, 8050, 7760, 7480, 7210, 6950, 6700, 6460, 6230, 6010, 5790, 5580, 5380, 5190, 5000, 4820, 4650, 4480, 4320, 4160, 4010}, {48210, 9640, 9290, 8960, 8640, 8330, 8030, 7740, 7460, 7190, 6930, 6680, 6440, 6210, 5990, 5770, 5560, 5360, 5170, 4980, 4800}, {57420, 11480, 11070, 10670, 10290, 9920, 9560, 9220, 8880, 8570, 8260, 7960, 7670, 7400, 7130, 6870, 6630, 6390, 6160, 5940, 5720}, {68110, 13620, 13130, 12660, 12200, 11760, 11340, 10930, 10540, 10160, 9790, 9440, 9100, 8770, 8460, 8150, 7860, 7580, 7300, 7040, 6790}, {80510, 16100, 15520, 14960, 14420, 13910, 13400, 12920, 12460, 12010, 11580, 11160, 10760, 10370, 10000, 9640, 9290, 8960, 8630, 8320, 8020}, {94890, 18980, 18290, 17640, 17000, 16390, 15800, 15230, 14680, 14150, 13640, 13150, 12680, 12220, 11780, 11360, 10950, 10560, 10180, 9810, 9460}, {111570, 22310, 21510, 20740, 19990, 19270, 18580, 17910, 17260, 16640, 16040, 15470, 14910, 14370, 13850, 13360, 12870, 12410, 11960, 11530, 11120}, {130920, 26180, 25240, 24330, 23460, 22610, 21800, 21010, 20260, 19530, 18830, 18150, 17490, 16860, 16260, 15670, 15110, 14560, 14040, 13530, 13050}, {153370, 30670, 29570, 28510, 27480, 26490, 25540, 24620, 23730, 22880, 22050, 21260, 20490, 19760, 19040, 18360, 17700, 17060, 16450, 15850, 15280}, {179410, 35880, 34590, 33340, 32140, 30990, 29870, 28800, 27760, 26760, 25800, 24870, 23970, 23110, 22280, 21480, 20700, 19960, 19240, 18550, 17880}, {209620, 41920, 40410, 38960, 37560, 36200, 34900, 33640, 32430, 31270, 30140, 29060, 28010, 27000, 26030, 25090, 24190, 23320, 22480, 21670, 20890}, {244650, 48930, 47170, 45470, 43830, 42260, 40730, 39270, 37850, 36490, 35180, 33910, 32690, 31510, 30380, 29290, 28230, 27220, 26240, 25290, 24380}, {285300, 57060, 55010, 53030, 51120, 49280, 47500, 45790, 44140, 42550, 41020, 39550, 38120, 36750, 35430, 34150, 32920, 31740, 30590, 29490, 28430}, {332450, 66490, 64100, 61790, 59560, 57420, 55350, 53360, 51440, 49590, 47800, 46080, 44420, 42820, 41280, 39800, 38360, 36980, 35650, 34370, 33130}},
    {{15000, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080, 2000, 1930, 1860, 1800, 1730, 1670, 1610, 1550, 1490}, {18900, 3780, 3640, 3510, 3390, 3260, 3150, 3030, 2920, 2820, 2720, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880}, {23420, 4680, 4520, 4350, 4200, 4050, 3900, 3760, 3620, 3490, 3370, 3250, 3130, 3020, 2910, 2800, 2700, 2610, 2510, 2420, 2330}, {28670, 5730, 5530, 5330, 5140, 4950, 4770, 4600, 4440, 4280, 4120, 3970, 3830, 3690, 3560, 3430, 3310, 3190, 3070, 2960, 2860}, {34760, 6950, 6700, 6460, 6230, 6000, 5790, 5580, 5380, 5180, 5000, 4820, 4640, 4480, 4320, 4160, 4010, 3870, 3730, 3590, 3460}, {41820, 8360, 8060, 7770, 7490, 7220, 6960, 6710, 6470, 6240, 6010, 5800, 5590, 5390, 5190, 5010, 4830, 4650, 4480, 4320, 4170}, {50010, 10000, 9640, 9300, 8960, 8640, 8330, 8030, 7740, 7460, 7190, 6930, 6680, 6440, 6210, 5990, 5770, 5560, 5360, 5170, 4980}, {59510, 11900, 11470, 11060, 10660, 10280, 9910, 9550, 9210, 8880, 8560, 8250, 7950, 7670, 7390, 7120, 6870, 6620, 6380, 6150, 5930}, {70540, 14110, 13600, 13110, 12640, 12180, 11740, 11320, 10910, 10520, 10140, 9780, 9430, 9090, 8760, 8440, 8140, 7850, 7560, 7290, 7030}, {83320, 16660, 16060, 15490, 14930, 14390, 13870, 13370, 12890, 12430, 11980, 11550, 11130, 10730, 10350, 9970, 9610, 9270, 8940, 8610, 8300}, {98150, 19630, 18920, 18240, 17590, 16950, 16340, 15750, 15190, 14640, 14110, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530, 10150, 9780}, {115360, 23070, 22240, 21440, 20670, 19920, 19210, 18520, 17850, 17210, 16590, 15990, 15410, 14860, 14320, 13810, 13310, 12830, 12370, 11930, 11500}, {135320, 27060, 26090, 25150, 24240, 23370, 22530, 21720, 20940, 20180, 19460, 18760, 18080, 17430, 16800, 16200, 15610, 15050, 14510, 13990, 13480}, {158470, 31690, 30550, 29450, 28390, 27370, 26380, 25430, 24520, 23640, 22790, 21970, 21170, 20410, 19680, 18970, 18290, 17630, 16990, 16380, 15790}, {185320, 37060, 35730, 34440, 33200, 32010, 30860, 29750, 28670, 27640, 26650, 25690, 24760, 23870, 23010, 22180, 21390, 20620, 19870, 19160, 18470}, {216470, 43290, 41740, 40230, 38780, 37390, 36040, 34750, 33490, 32290, 31130, 30010, 28930, 27880, 26880, 25910, 24980, 24080, 23210, 22380, 21570}, {252610, 50520, 48700, 46950, 45260, 43630, 42060, 40550, 39090, 37680, 36320, 35010, 33750, 32540, 31370, 30240, 29150, 28100, 27090, 26110, 25170}, {294520, 58900, 56780, 54740, 52770, 50870, 49040, 47270, 45570, 43930, 42350, 40820, 39350, 37940, 36570, 35260, 33990, 32760, 31580, 30450, 29350}, {343150, 68630, 66160, 63780, 61480, 59270, 57130, 55080, 53090, 51180, 49340, 47560, 45850, 44200, 42610, 41080, 39600, 38170, 36800, 35470, 34200}, {399550, 79910, 77030, 74260, 71590, 69010, 66530, 64130, 61820, 59600, 57450, 55380, 53390, 51470, 49610, 47830, 46110, 44450, 42850, 41300, 39820}},
    {{17500, 3500, 3370, 3250, 3140, 3020, 2910, 2810, 2710, 2610, 2520, 2430, 2340, 2250, 2170, 2090, 2020, 1950, 1880, 1810, 1740}, {21800, 4360, 4200, 4050, 3910, 3770, 3630, 3500, 3370, 3250, 3130, 3020, 2910, 2810, 2710, 2610, 2520, 2430, 2340, 2250, 2170}, {26790, 5360, 5160, 4980, 4800, 4630, 4460, 4300, 4140, 4000, 3850, 3710, 3580, 3450, 3330, 3210, 3090, 2980, 2870, 2770, 2670}, {32570, 6510, 6280, 6050, 5840, 5630, 5420, 5230, 5040, 4860, 4680, 4520, 4350, 4200, 4040, 3900, 3760, 3620, 3490, 3370, 3250}, {39290, 7860, 7570, 7300, 7040, 6790, 6540, 6310, 6080, 5860, 5650, 5450, 5250, 5060, 4880, 4700, 4530, 4370, 4210, 4060, 3910}, {47070, 9410, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6520, 6290, 6060, 5850, 5630, 5430, 5240, 5050, 4870, 4690}, {56100, 11220, 10820, 10430, 10050, 9690, 9340, 9000, 8680, 8370, 8070, 7780, 7500, 7230, 6970, 6720, 6470, 6240, 6020, 5800, 5590}, {66580, 13320, 12840, 12370, 11930, 11500, 11090, 10690, 10300, 9930, 9570, 9230, 8900, 8580, 8270, 7970, 7680, 7410, 7140, 6880, 6630}, {78730, 15750, 15180, 14630, 14110, 13600, 13110, 12640, 12180, 11740, 11320, 10910, 10520, 10140, 9780, 9420, 9090, 8760, 8440, 8140, 7850}, {92830, 18570, 17900, 17250, 16630, 16030, 15460, 14900, 14360, 13850, 13350, 12870, 12400, 11960, 11530, 11110, 10710, 10330, 9950, 9600, 9250}, {109180, 21840, 21050, 20290, 19560, 18860, 18180, 17520, 16890, 16290, 15700, 15130, 14590, 14060, 13560, 13070, 12600, 12150, 11710, 11290, 10880}, {128150, 25630, 24710, 23820, 22960, 22130, 21340, 20570, 19830, 19110, 18430, 17760, 17120, 16510, 15910, 15340, 14790, 14260, 13740, 13250, 12770}, {150160, 30030, 28950, 27910, 26900, 25930, 25000, 24100, 23230, 22400, 21590, 20810, 20060, 19340, 18650, 17970, 17330, 16700, 16100, 15520, 14960}, {175680, 35140, 33870, 32650, 31480, 30340, 29250, 28200, 27180, 26200, 25260, 24350, 23470, 22630, 21820, 21030, 20270, 19540, 18840, 18160, 17510}, {205290, 41060, 39580, 38150, 36780, 35460, 34180, 32950, 31760, 30620, 29520, 28460, 27430, 26440, 25490, 24570, 23690, 22840, 22010, 21220, 20460}, {239640, 47930, 46200, 44540, 42940, 41390, 39900, 38460, 37080, 35740, 34460, 33220, 32020, 30870, 29760, 28690, 27650, 26660, 25700, 24770, 23880}, {279480, 55900, 53880, 51940, 50070, 48270, 46530, 44860, 43240, 41690, 40190, 38740, 37340, 36000, 34700, 33450, 32250, 31090, 29970, 28890, 27850}, {325690, 65140, 62790, 60530, 58350, 56250, 54230, 52280, 50390, 48580, 46830, 45150, 43520, 41950, 40440, 38990, 37580, 36230, 34930, 33670, 32460}, {379310, 75860, 73130, 70500, 67960, 65510, 63150, 60880, 58690, 56580, 54540, 52580, 50680, 48860, 47100, 45400, 43770, 42190, 40680, 39210, 37800}, {441490, 88300, 85120, 82060, 79100, 76250, 73510, 70860, 68310, 65850, 63480, 61200, 58990, 56870, 54820, 52850, 50950, 49110, 47340, 45640, 44000}},
    {{9200, 1840, 1770, 1710, 1650, 1590, 1530, 1480, 1420, 1370, 1320, 1280, 1230, 1190, 1140, 1100, 1060, 1020, 990, 950, 920}, {19800, 3960, 3820, 3680, 3550, 3420, 3300, 3180, 3060, 2950, 2850, 2740, 2650, 2550, 2460, 2370, 2280, 2200, 2120, 2050, 1970}, {35700, 7140, 6880, 6640, 6400, 6170, 5940, 5730, 5520, 5320, 5130, 4950, 4770, 4600, 4430, 4270, 4120, 3970, 3830, 3690, 3560}, {59550, 11910, 11480, 11070, 10670, 10290, 9920, 9560, 9210, 8880, 8560, 8250, 7960, 7670, 7390, 7130, 6870, 6620, 6390, 6160, 5930}, {95330, 19070, 18380, 17720, 17080, 16460, 15870, 15300, 14750, 14220, 13710, 13210, 12740, 12280, 11840, 11410, 11000, 10600, 10220, 9850, 9500}},
    {{15000, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080, 2000, 1930, 1860, 1800, 1730, 1670, 1610, 1550, 1490}, {28500, 5700, 5490, 5300, 5110, 4920, 4750, 4570, 4410, 4250, 4100, 3950, 3810, 3670, 3540, 3410, 3290, 3170, 3060, 2950, 2840}, {48750, 9750, 9400, 9060, 8730, 8420, 8120, 7820, 7540, 7270, 7010, 6760, 6510, 6280, 6050, 5840, 5630, 5420, 5230, 5040, 4860}, {79130, 15830, 15260, 14710, 14180, 13670, 13170, 12700, 12240, 11800, 11380, 10970, 10570, 10190, 9830, 9470, 9130, 8800, 8490, 8180, 7890}, {124690, 24940, 24040, 23170, 22340, 21540, 20760, 20010, 19290, 18600, 17930, 17280, 16660, 16060, 15480, 14930, 14390, 13870, 13370, 12890, 12430}},
    {{11200, 2240, 2160, 2080, 2010, 1930, 1860, 1800, 1730, 1670, 1610, 1550, 1500, 1440, 1390, 1340, 1290, 1250, 1200, 1160, 1120}, {22800, 4560, 4400, 4240, 4090, 3940, 3800, 3660, 3530, 3400, 3280, 3160, 3050, 2940, 2830, 2730, 2630, 2540, 2440, 2360, 2270}, {40200, 8040, 7750, 7470, 7200, 6940, 6690, 6450, 6220, 6000, 5780, 5570, 5370, 5180, 4990, 4810, 4640, 4470, 4310, 4160, 4010}, {66300, 13260, 12780, 12320, 11880, 11450, 11040, 10640, 10260, 9890, 9530, 9190, 8860, 8540, 8230, 7940, 7650, 7380, 7110, 6850, 6610}, {105450, 21090, 20330, 19600, 18890, 18210, 17560, 16930, 16320, 15730, 15160, 14620, 14090, 13580, 13090, 12620, 12170, 11730, 11310, 10900, 10510}},
    {{20400, 4080, 3930, 3790, 3660, 3520, 3400, 3270, 3160, 3040, 2930, 2830, 2730, 2630, 2530, 2440, 2350, 2270, 2190, 2110, 2030}, {36600, 7320, 7060, 6800, 6560, 6320, 6090, 5870, 5660, 5460, 5260, 5070, 4890, 4710, 4540, 4380, 4220, 4070, 3920, 3780, 3650}, {60900, 12180, 11740, 11320, 10910, 10520, 10140, 9770, 9420, 9080, 8760, 8440, 8140, 7840, 7560, 7290, 7030, 6770, 6530, 6300, 6070}, {97350, 19470, 18770, 18090, 17440, 16810, 16210, 15630, 15060, 14520, 14000, 13490, 13010, 12540, 12090, 11650, 11230, 10830, 10440, 10060, 9700}, {152030, 30410, 29310, 28260, 27240, 26260, 25310, 24400, 23520, 22680, 21860, 21070, 20310, 19580, 18880, 18200, 17540, 16910, 16300, 15720, 15150}},
    {{18400, 3680, 3550, 3420, 3300, 3180, 3060, 2950, 2850, 2740, 2650, 2550, 2460, 2370, 2280, 2200, 2120, 2050, 1970, 1900, 1830}, {33600, 6720, 6480, 6240, 6020, 5800, 5590, 5390, 5200, 5010, 4830, 4660, 4490, 4330, 4170, 4020, 3880, 3740, 3600, 3470, 3350}, {56400, 11280, 10870, 10480, 10110, 9740, 9390, 9050, 8730, 8410, 8110, 7820, 7540, 7260, 7000, 6750, 6510, 6270, 6050, 5830, 5620}, {90600, 18120, 17470, 16840, 16230, 15650, 15080, 14540, 14020, 13510, 13030, 12560, 12110, 11670, 11250, 10850, 10450, 10080, 9720, 9370, 9030}, {141900, 28380, 27360, 26370, 25420, 24510, 23630, 22780, 21960, 21170, 20400, 19670, 18960, 18280, 17620, 16990, 16370, 15790, 15220, 14670, 14140}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {11600, 2320, 2240, 2160, 2080, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1160}, {13460, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080, 2010, 1930, 1870, 1800, 1730, 1670, 1610, 1550, 1500, 1440, 1390, 1340}, {15610, 3120, 3010, 2900, 2800, 2700, 2600, 2510, 2420, 2330, 2240, 2160, 2090, 2010, 1940, 1870, 1800, 1740, 1670, 1610, 1560}, {18110, 3620, 3490, 3370, 3240, 3130, 3010, 2910, 2800, 2700, 2600, 2510, 2420, 2330, 2250, 2170, 2090, 2010, 1940, 1870, 1800}, {21000, 4200, 4050, 3900, 3760, 3630, 3500, 3370, 3250, 3130, 3020, 2910, 2810, 2710, 2610, 2510, 2420, 2340, 2250, 2170, 2090}, {24360, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770, 3630, 3500, 3380, 3260, 3140, 3030, 2920, 2810, 2710, 2610, 2520, 2430}, {28260, 5650, 5450, 5250, 5060, 4880, 4710, 4540, 4370, 4220, 4060, 3920, 3780, 3640, 3510, 3380, 3260, 3140, 3030, 2920, 2820}, {32780, 6560, 6320, 6090, 5870, 5660, 5460, 5260, 5070, 4890, 4710, 4540, 4380, 4220, 4070, 3920, 3780, 3650, 3520, 3390, 3270}, {38030, 7610, 7330, 7070, 6810, 6570, 6330, 6100, 5880, 5670, 5470, 5270, 5080, 4900, 4720, 4550, 4390, 4230, 4080, 3930, 3790}, {44110, 8820, 8510, 8200, 7900, 7620, 7350, 7080, 6830, 6580, 6340, 6110, 5890, 5680, 5480, 5280, 5090, 4910, 4730, 4560, 4400}, {51170, 10230, 9870, 9510, 9170, 8840, 8520, 8210, 7920, 7630, 7360, 7090, 6840, 6590, 6350, 6130, 5910, 5690, 5490, 5290, 5100}, {59360, 11870, 11440, 11030, 10640, 10250, 9880, 9530, 9180, 8850, 8540, 8230, 7930, 7650, 7370, 7110, 6850, 6600, 6370, 6140, 5920}, {68860, 13770, 13280, 12800, 12340, 11890, 11460, 11050, 10650, 10270, 9900, 9540, 9200, 8870, 8550, 8240, 7950, 7660, 7380, 7120, 6860}, {79880, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360, 11910, 11490, 11070, 10670, 10290, 9920, 9560, 9220, 8890, 8570, 8260, 7960}, {92660, 18530, 17860, 17220, 16600, 16000, 15430, 14870, 14340, 13820, 13320, 12840, 12380, 11940, 11510, 11090, 10690, 10310, 9940, 9580, 9230}, {107480, 21500, 20720, 19980, 19260, 18560, 17900, 17250, 16630, 16030, 15450, 14900, 14360, 13840, 13350, 12870, 12400, 11960, 11530, 11110, 10710}, {124680, 24940, 24040, 23170, 22340, 21530, 20760, 20010, 19290, 18600, 17930, 17280, 16660, 16060, 15480, 14920, 14390, 13870, 13370, 12890, 12420}, {144630, 28930, 27880, 26880, 25910, 24980, 24080, 23210, 22380, 21570, 20800, 20050, 19330, 18630, 17960, 17310, 16690, 16090, 15510, 14950, 14410}, {167770, 33550, 32350, 31180, 30060, 28980, 27930, 26930, 25960, 25020, 24120, 23250, 22420, 21610, 20830, 20080, 19360, 18660, 17990, 17340, 16720}},
    {{11000, 2200, 2120, 2040, 1970, 1900, 1830, 1770, 1700, 1640, 1580, 1520, 1470, 1420, 1370, 1320, 1270, 1220, 1180, 1140, 1100}, {15760, 3150, 3040, 2930, 2820, 2720, 2620, 2530, 2440, 2350, 2270, 2180, 2110, 2030, 1960, 1890, 1820, 1750, 1690, 1630, 1570}, {21280, 4260, 4100, 3960, 3810, 3680, 3540, 3420, 3290, 3170, 3060, 2950, 2840, 2740, 2640, 2550, 2460, 2370, 2280, 2200, 2120}, {27690, 5540, 5340, 5150, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3840, 3700, 3570, 3440, 3310, 3190, 3080, 2970, 2860, 2760}, {35120, 7020, 6770, 6530, 6290, 6070, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520, 4360, 4200, 4050, 3910, 3770, 3630, 3500}, {43740, 8750, 8430, 8130, 7840, 7550, 7280, 7020, 6770, 6520, 6290, 6060, 5840, 5630, 5430, 5240, 5050, 4870, 4690, 4520, 4360}, {53730, 10750, 10360, 9990, 9630, 9280, 8950, 8620, 8310, 8010, 7730, 7450, 7180, 6920, 6670, 6430, 6200, 5980, 5760, 5550, 5350}, {65330, 13070, 12600, 12140, 11710, 11280, 10880, 10490, 10110, 9740, 9390, 9060, 8730, 8420, 8110, 7820, 7540, 7270, 7010, 6750, 6510}, {78780, 15760, 15190, 14640, 14120, 13610, 13120, 12650, 12190, 11750, 11330, 10920, 10530, 10150, 9780, 9430, 9090, 8760, 8450, 8140, 7850}, {94390, 18880, 18200, 17540, 16910, 16300, 15720, 15150, 14600, 14080, 13570, 13080, 12610, 12160, 11720, 11300, 10890, 10500, 10120, 9760, 9410}, {112490, 22500, 21690, 20910, 20150, 19430, 18730, 18060, 17410, 16780, 16170, 15590, 15030, 14490, 13970, 13470, 12980, 12510, 12060, 11630, 11210}, {133490, 26700, 25740, 24810, 23920, 23060, 22230, 21430, 20650, 19910, 19190, 18500, 17840, 17190, 16580, 15980, 15400, 14850, 14310, 13800, 13300}, {157850, 31570, 30430, 29340, 28280, 27260, 26280, 25340, 24420, 23540, 22700, 21880, 21090, 20330, 19600, 18890, 18210, 17560, 16930, 16320, 15730}, {186100, 37220, 35880, 34590, 33340, 32140, 30990, 29870, 28800, 27760, 26760, 25800, 24870, 23970, 23110, 22280, 21480, 20700, 19960, 19240, 18550}, {218880, 43780, 42200, 40680, 39220, 37800, 36440, 35130, 33870, 32650, 31470, 30340, 29250, 28190, 27180, 26200, 25260, 24350, 23470, 22630, 21810}, {256900, 51380, 49530, 47750, 46030, 44370, 42770, 41230, 39750, 38320, 36940, 35610, 34330, 33090, 31900, 30750, 29640, 28580, 27550, 26560, 25600}, {301000, 60200, 58030, 55940, 53930, 51990, 50120, 48310, 46570, 44900, 43280, 41720, 40220, 38770, 37380, 36030, 34730, 33480, 32280, 31120, 30000}, {352160, 70430, 67900, 65450, 63100, 60830, 58640, 56520, 54490, 52530, 50640, 48810, 47060, 45360, 43730, 42160, 40640, 39170, 37760, 36410, 35090}, {411510, 82300, 79340, 76480, 73730, 71080, 68520, 66050, 63670, 61380, 59170, 57040, 54990, 53010, 51100, 49260, 47490, 45780, 44130, 42540, 41010}, {480350, 96070, 92610, 89280, 86060, 82970, 79980, 77100, 74320, 71650, 69070, 66580, 64190, 61870, 59650, 57500, 55430, 53430, 51510, 49660, 47870}},
    {{40000, 8000, 7710, 7430, 7170, 6910, 6660, 6420, 6190, 5970, 5750, 5540, 5340, 5150, 4970, 4790, 4620, 4450, 4290, 4140, 3990}, {49400, 9880, 9520, 9180, 8850, 8530, 8230, 7930, 7640, 7370, 7100, 6850, 6600, 6360, 6130, 5910, 5700, 5500, 5300, 5110, 4920}, {60300, 12060, 11630, 11210, 10800, 10420, 10040, 9680, 9330, 8990, 8670, 8360, 8060, 7770, 7490, 7220, 6960, 6710, 6470, 6230, 6010}, {72950, 14590, 14070, 13560, 13070, 12600, 12150, 11710, 11290, 10880, 10490, 10110, 9750, 9400, 9060, 8730, 8420, 8120, 7820, 7540, 7270}, {87630, 17530, 16890, 16290, 15700, 15130, 14590, 14060, 13560, 13070, 12600, 12150, 11710, 11290, 10880, 10490, 10110, 9750, 9400, 9060, 8730}, {104650, 20930, 20180, 19450, 18750, 18070, 17420, 16800, 16190, 15610, 15050, 14510, 13980, 13480, 12990, 12530, 12080, 11640, 11220, 10820, 10430}, {124390, 24880, 23980, 23120, 22290, 21480, 20710, 19970, 19250, 18550, 17890, 17240, 16620, 16020, 15450, 14890, 14350, 13840, 13340, 12860, 12400}, {147290, 29460, 28400, 27380, 26390, 25440, 24520, 23640, 22790, 21970, 21180, 20420, 19680, 18970, 18290, 17630, 17000, 16380, 15790, 15230, 14680}, {173860, 34770, 33520, 32310, 31150, 30030, 28950, 27910, 26900, 25930, 25000, 24100, 23230, 22390, 21590, 20810, 20060, 19340, 18640, 17970, 17330}, {204670, 40930, 39460, 38040, 36670, 35350, 34080, 32850, 31670, 30530, 29430, 28370, 27350, 26360, 25420, 24500, 23620, 22770, 21950, 21160, 20400}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{10000, 2000, 1930, 1860, 1790, 1730, 1670, 1610, 1550, 1490, 1440, 1390, 1340, 1290, 1240, 1200, 1150, 1110, 1070, 1030, 1000}, {13100, 2620, 2530, 2430, 2350, 2260, 2180, 2100, 2030, 1950, 1880, 1820, 1750, 1690, 1630, 1570, 1510, 1460, 1400, 1350, 1310}, {16700, 3340, 3220, 3100, 2990, 2880, 2780, 2680, 2580, 2490, 2400, 2310, 2230, 2150, 2070, 2000, 1930, 1860, 1790, 1730, 1660}, {20870, 4170, 4020, 3880, 3740, 3600, 3470, 3350, 3230, 3110, 3000, 2890, 2790, 2690, 2590, 2500, 2410, 2320, 2240, 2160, 2080}, {25710, 5140, 4960, 4780, 4610, 4440, 4280, 4130, 3980, 3830, 3700, 3560, 3430, 3310, 3190, 3080, 2970, 2860, 2760, 2660, 2560}, {31320, 6260, 6040, 5820, 5610, 5410, 5210, 5030, 4850, 4670, 4500, 4340, 4180, 4030, 3890, 3750, 3610, 3480, 3360, 3240, 3120}, {37830, 7570, 7290, 7030, 6780, 6530, 6300, 6070, 5850, 5640, 5440, 5240, 5050, 4870, 4700, 4530, 4370, 4210, 4060, 3910, 3770}, {45380, 9080, 8750, 8430, 8130, 7840, 7560, 7280, 7020, 6770, 6530, 6290, 6060, 5850, 5640, 5430, 5240, 5050, 4870, 4690, 4520}, {54140, 10830, 10440, 10060, 9700, 9350, 9020, 8690, 8380, 8080, 7790, 7510, 7230, 6970, 6720, 6480, 6250, 6020, 5810, 5600, 5400}, {64310, 12860, 12400, 11950, 11520, 11110, 10710, 10320, 9950, 9590, 9250, 8910, 8590, 8280, 7990, 7700, 7420, 7150, 6900, 6650, 6410}, {76100, 15220, 14670, 14140, 13630, 13140, 12670, 12210, 11770, 11350, 10940, 10550, 10170, 9800, 9450, 9110, 8780, 8470, 8160, 7870, 7580}, {89770, 17950, 17310, 16680, 16080, 15510, 14950, 14410, 13890, 13390, 12910, 12440, 12000, 11560, 11150, 10750, 10360, 9990, 9630, 9280, 8950}, {105640, 21130, 20370, 19630, 18930, 18250, 17590, 16960, 16340, 15760, 15190, 14640, 14120, 13610, 13120, 12640, 12190, 11750, 11330, 10920, 10530}, {124040, 24810, 23910, 23050, 22220, 21420, 20650, 19910, 19190, 18500, 17840, 17190, 16570, 15980, 15400, 14850, 14310, 13800, 13300, 12820, 12360}, {145380, 29080, 28030, 27020, 26050, 25110, 24210, 23330, 22490, 21690, 20900, 20150, 19430, 18730, 18050, 17400, 16780, 16170, 15590, 15030, 14490}, {170140, 34030, 32800, 31620, 30480, 29390, 28330, 27310, 26330, 25380, 24460, 23580, 22740, 21920, 21130, 20370, 19630, 18930, 18250, 17590, 16960}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28590, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {232190, 46440, 44770, 43150, 41600, 40100, 38660, 37270, 35930, 34630, 33390, 32180, 31030, 29910, 28830, 27790, 26790, 25830, 24900, 24000, 23140}, {270840, 54170, 52220, 50340, 48530, 46780, 45090, 43470, 41910, 40400, 38940, 37540, 36190, 34890, 33630, 32420, 31250, 30130, 29040, 28000, 26990}, {315670, 63130, 60860, 58670, 56560, 54520, 52560, 50670, 48840, 47080, 45390, 43760, 42180, 40660, 39200, 37790, 36430, 35120, 33850, 32630, 31460}},
    {{90000, 18000, 17350, 16730, 16130, 15540, 14990, 14450, 13930, 13420, 12940, 12480, 12030, 11590, 11180, 10770, 10390, 10010, 9650, 9300, 8970}, {94260, 18850, 18170, 17520, 16890, 16280, 15690, 15130, 14580, 14060, 13550, 13070, 12600, 12140, 11700, 11280, 10880, 10490, 10110, 9740, 9390}, {98580, 19720, 19010, 18320, 17660, 17030, 16410, 15820, 15250, 14700, 14170, 13660, 13170, 12700, 12240, 11800, 11380, 10970, 10570, 10190, 9820}, {102960, 20590, 19850, 19140, 18450, 17780, 17140, 16530, 15930, 15360, 14800, 14270, 13760, 13260, 12780, 12320, 11880, 11450, 11040, 10640, 10260}, {107400, 21480, 20710, 19960, 19240, 18550, 17880, 17240, 16620, 16020, 15440, 14890, 14350, 13830, 13340, 12860, 12390, 11950, 11520, 11100, 10700}, {111900, 22380, 21580, 20800, 20050, 19330, 18630, 17960, 17310, 16690, 16090, 15510, 14950, 14410, 13900, 13400, 12910, 12450, 12000, 11570, 11150}, {116470, 23290, 22460, 21650, 20870, 20120, 19390, 18690, 18020, 17370, 16750, 16140, 15560, 15000, 14460, 13940, 13440, 12960, 12490, 12040, 11610}, {121100, 24220, 23350, 22510, 21700, 20920, 20160, 19440, 18740, 18060, 17410, 16790, 16180, 15600, 15040, 14500, 13970, 13470, 12990, 12520, 12070}, {125800, 25160, 24250, 23380, 22540, 21730, 20950, 20190, 19460, 18760, 18090, 17440, 16810, 16200, 15620, 15060, 14520, 13990, 13490, 13000, 12540}, {130560, 26110, 25170, 24270, 23390, 22550, 21740, 20960, 20200, 19470, 18770, 18100, 17450, 16820, 16210, 15630, 15070, 14520, 14000, 13500, 13010}, {135390, 27080, 26100, 25160, 24260, 23380, 22540, 21730, 20950, 20190, 19470, 18770, 18090, 17440, 16810, 16210, 15620, 15060, 14520, 14000, 13490}, {140280, 28060, 27050, 26070, 25130, 24230, 23360, 22520, 21710, 20920, 20170, 19440, 18740, 18070, 17420, 16790, 16190, 15610, 15040, 14500, 13980}, {145250, 29050, 28000, 27000, 26020, 25090, 24180, 23310, 22470, 21660, 20880, 20130, 19410, 18710, 18040, 17390, 16760, 16160, 15580, 15010, 14470}, {150280, 30060, 28970, 27930, 26930, 25960, 25020, 24120, 23250, 22420, 21610, 20830, 20080, 19360, 18660, 17990, 17340, 16720, 16120, 15540, 14980}, {155380, 31080, 29960, 28880, 27840, 26840, 25870, 24940, 24040, 23180, 22340, 21540, 20760, 20020, 19290, 18600, 17930, 17280, 16660, 16060, 15480}, {160560, 32110, 30960, 29840, 28770, 27730, 26730, 25770, 24840, 23950, 23090, 22260, 21450, 20680, 19940, 19220, 18530, 17860, 17220, 16600, 16000}, {165810, 33160, 31970, 30820, 29710, 28640, 27610, 26610, 25650, 24730, 23840, 22980, 22160, 21360, 20590, 19850, 19130, 18440, 17780, 17140, 16520}, {171130, 34230, 32990, 31810, 30660, 29560, 28490, 27470, 26480, 25530, 24610, 23720, 22870, 22040, 21250, 20480, 19750, 19040, 18350, 17690, 17050}, {176520, 35300, 34030, 32810, 31630, 30490, 29390, 28330, 27310, 26330, 25380, 24470, 23590, 22740, 21920, 21130, 20370, 19640, 18930, 18250, 17590}, {181990, 36400, 35090, 33830, 32610, 31430, 30300, 29210, 28160, 27150, 26170, 25230, 24320, 23440, 22600, 21790, 21000, 20250, 19520, 18810, 18140}, {187540, 37510, 36160, 34860, 33600, 32390, 31230, 30100, 29020, 27970, 26970, 26000, 25060, 24160, 23290, 22450, 21640, 20860, 20110, 19390, 18690}, {193170, 38630, 37240, 35900, 34610, 33360, 32160, 31000, 29890, 28810, 27780, 26780, 25810, 24880, 23990, 23120, 22290, 21490, 20710, 19970, 19250}, {198870, 39770, 38340, 36960, 35630, 34350, 33110, 31920, 30770, 29660, 28600, 27570, 26570, 25620, 24690, 23810, 22950, 22120, 21330, 20560, 19820}, {204660, 40930, 39460, 38040, 36670, 35350, 34080, 32850, 31670, 30530, 29430, 28370, 27350, 26360, 25410, 24500, 23620, 22770, 21950, 21160, 20390}, {210520, 42100, 40590, 39130, 37720, 36360, 35050, 33790, 32570, 31400, 30270, 29180, 28130, 27120, 26140, 25200, 24290, 23420, 22580, 21760, 20980}, {216470, 43290, 41740, 40230, 38780, 37390, 36040, 34740, 33490, 32290, 31130, 30010, 28930, 27880, 26880, 25910, 24980, 24080, 23210, 22380, 21570}, {222500, 44500, 42900, 41350, 39860, 38430, 37050, 35710, 34430, 33190, 31990, 30840, 29730, 28660, 27630, 26630, 25680, 24750, 23860, 23000, 22170}, {228610, 45720, 44080, 42490, 40960, 39490, 38060, 36690, 35370, 34100, 32870, 31690, 30550, 29450, 28390, 27370, 26380, 25430, 24520, 23630, 22780}, {234820, 46960, 45270, 43640, 42070, 40560, 39100, 37690, 36330, 35020, 33760, 32550, 31380, 30250, 29160, 28110, 27100, 26120, 25180, 24270, 23400}, {241100, 48220, 46480, 44810, 43200, 41640, 40140, 38700, 37310, 35960, 34670, 33420, 32220, 31060, 29940, 28860, 27820, 26820, 25850, 24920, 24030}, {247480, 49500, 47710, 46000, 44340, 42740, 41210, 39720, 38290, 36910, 35580, 34300, 33070, 31880, 30730, 29620, 28560, 27530, 26540, 25580, 24660}, {253940, 50790, 48960, 47200, 45500, 43860, 42280, 40760, 39290, 37880, 36510, 35200, 33930, 32710, 31530, 30400, 29300, 28250, 27230, 26250, 25310}, {260500, 52100, 50220, 48420, 46670, 44990, 43370, 41810, 40310, 38860, 37460, 36110, 34810, 33560, 32350, 31180, 30060, 28980, 27930, 26930, 25960}, {267150, 53430, 51510, 49650, 47860, 46140, 44480, 42880, 41330, 39850, 38410, 37030, 35700, 34410, 33170, 31980, 30830, 29720, 28650, 27620, 26620}, {273890, 54780, 52810, 50900, 49070, 47300, 45600, 43960, 42380, 40850, 39380, 37960, 36600, 35280, 34010, 32790, 31600, 30470, 29370, 28310, 27290}, {280720, 56140, 54120, 52170, 50300, 48490, 46740, 45060, 43440, 41870, 40360, 38910, 37510, 36160, 34860, 33600, 32390, 31230, 30100, 29020, 27970}, {287650, 57530, 55460, 53460, 51540, 49680, 47890, 46170, 44510, 42910, 41360, 39870, 38440, 37050, 35720, 34430, 33190, 32000, 30850, 29740, 28670}, {294680, 58940, 56810, 54770, 52800, 50900, 49060, 47300, 45590, 43950, 42370, 40850, 39380, 37960, 36590, 35270, 34000, 32780, 31600, 30460, 29370}, {301800, 60360, 58190, 56090, 54070, 52130, 50250, 48440, 46700, 45020, 43400, 41830, 40330, 38880, 37480, 36130, 34830, 33570, 32360, 31200, 30080}, {309030, 61810, 59580, 57440, 55370, 53370, 51450, 49600, 47820, 46090, 44430, 42830, 41290, 39810, 38370, 36990, 35660, 34380, 33140, 31950, 30800}, {316350, 63270, 60990, 58800, 56680, 54640, 52670, 50780, 48950, 47190, 45490, 43850, 42270, 40750, 39280, 37870, 36510, 35190, 33920, 32700, 31530}, {323780, 64760, 62430, 60180, 58010, 55920, 53910, 51970, 50100, 48290, 46560, 44880, 43260, 41710, 40210, 38760, 37360, 36020, 34720, 33470, 32270}, {331320, 66260, 63880, 61580, 59360, 57220, 55160, 53180, 51260, 49420, 47640, 45920, 44270, 42680, 41140, 39660, 38230, 36860, 35530, 34250, 33020}, {338950, 67790, 65350, 63000, 60730, 58540, 56440, 54400, 52450, 50560, 48740, 46980, 45290, 43660, 42090, 40570, 39110, 37710, 36350, 35040, 33780}, {346700, 69340, 66840, 64440, 62120, 59880, 57730, 55650, 53640, 51710, 49850, 48060, 46330, 44660, 43050, 41500, 40010, 38570, 37180, 35840, 34550}, {354550, 70910, 68360, 65900, 63520, 61240, 59030, 56910, 54860, 52880, 50980, 49150, 47380, 45670, 44030, 42440, 40910, 39440, 38020, 36650, 35330}, {362520, 72500, 69890, 67380, 64950, 62610, 60360, 58190, 56090, 54070, 52130, 50250, 48440, 46700, 45020, 43390, 41830, 40330, 38870, 37480, 36130}, {370590, 74120, 71450, 68880, 66400, 64010, 61700, 59480, 57340, 55280, 53290, 51370, 49520, 47740, 46020, 44360, 42760, 41220, 39740, 38310, 36930}, {378780, 75760, 73030, 70400, 67870, 65420, 63070, 60800, 58610, 56500, 54460, 52500, 50610, 48790, 47030, 45340, 43710, 42140, 40620, 39160, 37750}, {387080, 77420, 74630, 71940, 69350, 66860, 64450, 62130, 59890, 57740, 55660, 53650, 51720, 49860, 48070, 46340, 44670, 43060, 41510, 40010, 38570}, {395500, 79100, 76250, 73510, 70860, 68310, 65850, 63480, 61200, 58990, 56870, 54820, 52850, 50950, 49110, 47340, 45640, 44000, 42410, 40890, 39410}, {404040, 80810, 77900, 75090, 72390, 69790, 67270, 64850, 62520, 60270, 58100, 56000, 53990, 52040, 50170, 48370, 46620, 44950, 43330, 41770, 40260}, {412700, 82540, 79570, 76700, 73940, 71280, 68710, 66240, 63860, 61560, 59340, 57200, 55150, 53160, 51250, 49400, 47620, 45910, 44260, 42660, 41130}, {421470, 84290, 81260, 78330, 75510, 72800, 70180, 67650, 65210, 62870, 60600, 58420, 56320, 54290, 52340, 50450, 48640, 46880, 45200, 43570, 42000}, {430370, 86070, 82980, 79990, 77110, 74330, 71660, 69080, 66590, 64190, 61880, 59660, 57510, 55440, 53440, 51520, 49660, 47880, 46150, 44490, 42890}, {439400, 87880, 84720, 81670, 78730, 75890, 73160, 70530, 67990, 65540, 63180, 60910, 58710, 56600, 54560, 52600, 50700, 48880, 47120, 45420, 43790}, {448550, 89710, 86480, 83370, 80370, 77470, 74680, 72000, 69400, 66910, 64500, 62170, 59940, 57780, 55700, 53690, 51760, 49900, 48100, 46370, 44700}, {457830, 91570, 88270, 85090, 82030, 79080, 76230, 73480, 70840, 68290, 65830, 63460, 61180, 58970, 56850, 54800, 52830, 50930, 49100, 47330, 45620}, {467240, 93450, 90080, 86840, 83710, 80700, 77800, 75000, 72300, 69690, 67180, 64770, 62430, 60190, 58020, 55930, 53920, 51980, 50100, 48300, 46560}, {476780, 95360, 91920, 88610, 85420, 82350, 79380, 76530, 73770, 71120, 68560, 66090, 63710, 61420, 59200, 57070, 55020, 53040, 51130, 49290, 47510}, {486460, 97290, 93790, 90410, 87160, 84020, 81000, 78080, 75270, 72560, 69950, 67430, 65000, 62660, 60410, 58230, 56130, 54110, 52170, 50290, 48480}, {496270, 99250, 95680, 92240, 88920, 85710, 82630, 79650, 76790, 74020, 71360, 68790, 66310, 63920, 61620, 59410, 57270, 55210, 53220, 51300, 49450}, {506220, 101240, 97600, 94080, 90700, 87430, 84290, 81250, 78330, 75510, 72790, 70170, 67640, 65210, 62860, 60600, 58410, 56310, 54280, 52330, 50450}, {516300, 103260, 99540, 95960, 92510, 89170, 85960, 82870, 79890, 77010, 74240, 71570, 68990, 66510, 64110, 61800, 59580, 57430, 55370, 53370, 51450}, {526530, 105310, 101520, 97860, 94340, 90940, 87670, 84510, 81470, 78540, 75710, 72980, 70360, 67820, 65380, 63030, 60760, 58570, 56460, 54430, 52470}, {536900, 107380, 103510, 99790, 96200, 92730, 89390, 86180, 83070, 80080, 77200, 74420, 71740, 69160, 66670, 64270, 61960, 59730, 57580, 55500, 53500}, {547420, 109480, 105540, 101740, 98080, 94550, 91150, 87860, 84700, 81650, 78710, 75880, 73150, 70510, 67980, 65530, 63170, 60900, 58700, 56590, 54550}, {558080, 111620, 107600, 103720, 99990, 96390, 92920, 89580, 86350, 83240, 80250, 77360, 74570, 71890, 69300, 66800, 64400, 62080, 59850, 57690, 55620}, {568900, 113780, 109680, 105730, 101930, 98260, 94720, 91310, 88020, 84860, 81800, 78860, 76020, 73280, 70640, 68100, 65650, 63280, 61010, 58810, 56690}, {579860, 115970, 111800, 107770, 103890, 100150, 96550, 93070, 89720, 86490, 83380, 80380, 77480, 74690, 72000, 69410, 66910, 64500, 62180, 59940, 57790}, {590980, 118200, 113940, 109840, 105880, 102070, 98400, 94860, 91440, 88150, 84980, 81920, 78970, 76120, 73380, 70740, 68200, 65740, 63370, 61090, 58890}, {602250, 120450, 116110, 111930, 107900, 104020, 100280, 96670, 93190, 89830, 86600, 83480, 80470, 77580, 74780, 72090, 69500, 66990, 64580, 62260, 60020}, {613680, 122740, 118320, 114060, 109950, 105990, 102180, 98500, 94950, 91540, 88240, 85060, 82000, 79050, 76200, 73460, 70820, 68270, 65810, 63440, 61160}, {625280, 125060, 120550, 116210, 112030, 108000, 104110, 100360, 96750, 93260, 89910, 86670, 83550, 80540, 77640, 74850, 72150, 69560, 67050, 64640, 62310}, {637030, 127410, 122820, 118400, 114140, 110030, 106070, 102250, 98570, 95020, 91600, 88300, 85120, 82060, 79100, 76250, 73510, 70860, 68310, 65850, 63480}, {648950, 129790, 125120, 120610, 116270, 112090, 108050, 104160, 100410, 96800, 93310, 89950, 86710, 83590, 80580, 77680, 74890, 72190, 69590, 67090, 64670}, {661030, 132210, 127450, 122860, 118440, 114170, 110060, 106100, 102280, 98600, 95050, 91630, 88330, 85150, 82080, 79130, 76280, 73530, 70890, 68330, 65870}, {673290, 134660, 129810, 125140, 120630, 116290, 112100, 108070, 104180, 100430, 96810, 93330, 89970, 86730, 83600, 80600, 77690, 74900, 72200, 69600, 67100}, {685710, 137140, 132210, 127450, 122860, 118440, 114170, 110060, 106100, 102280, 98600, 95050, 91630, 88330, 85150, 82080, 79130, 76280, 73530, 70890, 68330}, {698310, 139660, 134630, 129790, 125120, 120610, 116270, 112080, 108050, 104160, 100410, 96790, 93310, 89950, 86710, 83590, 80580, 77680, 74880, 72190, 69590}, {711090, 142220, 137100, 132160, 127400, 122820, 118400, 114130, 110030, 106060, 102250, 98570, 95020, 91600, 88300, 85120, 82060, 79100, 76250, 73510, 70860}, {724040, 144810, 139600, 134570, 129730, 125060, 120550, 116210, 112030, 108000, 104110, 100360, 96750, 93270, 89910, 86670, 83550, 80540, 77640, 74850, 72150}, {737180, 147440, 142130, 137010, 132080, 127320, 122740, 118320, 114060, 109960, 106000, 102180, 98500, 94960, 91540, 88240, 85070, 82000, 79050, 76210, 73460}, {750500, 150100, 144700, 139490, 134470, 129630, 124960, 120460, 116120, 111940, 107910, 104030, 100280, 96670, 93190, 89840, 86600, 83490, 80480, 77580, 74790}, {764010, 152800, 147300, 142000, 136890, 131960, 127210, 122630, 118210, 113960, 109860, 105900, 102090, 98410, 94870, 91450, 88160, 84990, 81930, 78980, 76140}, {777710, 155540, 149940, 144540, 139340, 134320, 129490, 124830, 120330, 116000, 111820, 107800, 103920, 100180, 96570, 93090, 89740, 86510, 83400, 80400, 77500}, {791590, 158320, 152620, 147120, 141830, 136720, 131800, 127060, 122480, 118070, 113820, 109720, 105770, 101970, 98300, 94760, 91350, 88060, 84890, 81830, 78890}, {805680, 161140, 155330, 149740, 144350, 139150, 134150, 129320, 124660, 120170, 115850, 111680, 107660, 103780, 100040, 96440, 92970, 89620, 86400, 83290, 80290}, {819950, 163990, 158090, 152400, 146910, 141620, 136520, 131610, 126870, 122300, 117900, 113660, 109560, 105620, 101820, 98150, 94620, 91210, 87930, 84760, 81710}, {834430, 166890, 160880, 155090, 149500, 144120, 138930, 133930, 129110, 124460, 119980, 115660, 111500, 107480, 103620, 99890, 96290, 92820, 89480, 86260, 83150}, {849120, 169820, 163710, 157820, 152130, 146660, 141380, 136290, 131380, 126650, 122090, 117700, 113460, 109380, 105440, 101640, 97980, 94460, 91060, 87780, 84620}, {864000, 172800, 166580, 160580, 154800, 149230, 143860, 138680, 133690, 128870, 124230, 119760, 115450, 111290, 107290, 103420, 99700, 96110, 92650, 89320, 86100}, {879100, 175820, 169490, 163390, 157510, 151840, 146370, 141100, 136020, 131120, 126400, 121850, 117470, 113240, 109160, 105230, 101440, 97790, 94270, 90880, 87610}, {894410, 178880, 172440, 166230, 160250, 154480, 148920, 143560, 138390, 133410, 128610, 123980, 119510, 115210, 111060, 107060, 103210, 99490, 95910, 92460, 89130}, {909930, 181990, 175430, 169120, 163030, 157160, 151500, 146050, 140790, 135720, 130840, 126130, 121590, 117210, 112990, 108920, 105000, 101220, 97580, 94060, 90680}, {925670, 185130, 178470, 172040, 165850, 159880, 154120, 148580, 143230, 138070, 133100, 128310, 123690, 119240, 114940, 110810, 106820, 102970, 99260, 95690, 92250}, {941630, 188330, 181550, 175010, 168710, 162640, 156780, 151140, 145700, 140450, 135390, 130520, 125820, 121290, 116930, 112720, 108660, 104750, 100980, 97340, 93840}, {957810, 191560, 184670, 178020, 171610, 165430, 159480, 153730, 148200, 142860, 137720, 132760, 127980, 123380, 118940, 114650, 110530, 106550, 102710, 99010, 95450}, {974220, 194840, 187830, 181070, 174550, 168270, 162210, 156370, 150740, 145310, 140080, 135040, 130180, 125490, 120970, 116620, 112420, 108370, 104470, 100710, 97080}, {990860, 198170, 191040, 184160, 177530, 171140, 164980, 159040, 153310, 147790, 142470, 137340, 132400, 127630, 123040, 118610, 114340, 110220, 106260, 102430, 98740}}
};

// let's for the moment keep the "offset" system of ids likewise main building still have id 0 and same for woodcutter but because of context we make the distinction
quint32 buildingsCosts[RESOURCES_NUMBER + BUILDINGS_NUMBER][/*FARMS_LEVELS_NUMBER*/101][CONSTRUCTION_EXTENDED_RESOURCES_NUMBER] = {
    {{0, 0, 0, 0, 0, 0}, {40, 100, 50, 60, 2, 1}, {65, 165, 85, 100, 1, 1}, {110, 280, 140, 165, 1, 2}, {185, 465, 235, 280, 1, 2}, {310, 780, 390, 465, 1, 2}, {520, 1300, 650, 780, 2, 3}, {870, 2170, 1085, 1300, 2, 4}, {1450, 3625, 1810, 2175, 2, 4}, {2420, 6050, 3025, 3630, 2, 5}, {4040, 10105, 5050, 6060, 2, 6}, {6750, 16870, 8435, 10125, 2, 7}, {11270, 28175, 14090, 16905, 2, 9}, {18820, 47055, 23525, 28230, 2, 11}, {31430, 78580, 39290, 47150, 2, 13}, {52490, 131230, 65615, 78740, 2, 15}, {87660, 219155, 109575, 131490, 3, 18}, {146395, 365985, 182995, 219590, 3, 22}, {244480, 611195, 305600, 366715, 3, 27}, {408280, 1020695, 510350, 612420, 3, 32}, {681825, 1704565, 852280, 1022740, 3, 38}},
    {{0, 0, 0, 0, 0, 0}, {80, 40, 80, 50, 2, 1}, {135, 65, 135, 85, 1, 1}, {225, 110, 225, 140, 1, 2}, {375, 185, 375, 235, 1, 2}, {620, 310, 620, 390, 1, 2}, {1040, 520, 1040, 650, 2, 3}, {1735, 870, 1735, 1085, 2, 4}, {2900, 1450, 2900, 1810, 2, 4}, {4840, 2420, 4840, 3025, 2, 5}, {8080, 4040, 8080, 5050, 2, 6}, {13500, 6750, 13500, 8435, 2, 7}, {22540, 11270, 22540, 14090, 2, 9}, {37645, 18820, 37645, 23525, 2, 11}, {62865, 31430, 62865, 39290, 2, 13}, {104985, 52490, 104985, 65615, 2, 15}, {175320, 87660, 175320, 109575, 3, 18}, {292790, 146395, 292790, 182995, 3, 22}, {488955, 244480, 488955, 305600, 3, 27}, {816555, 408280, 816555, 510350, 3, 32}, {1363650, 681825, 1363650, 852280, 3, 38}},
    {{0, 0, 0, 0, 0, 0}, {100, 80, 30, 60, 3, 1}, {165, 135, 50, 100, 2, 1}, {280, 225, 85, 165, 2, 2}, {465, 375, 140, 280, 2, 2}, {780, 620, 235, 465, 2, 2}, {1300, 1040, 390, 780, 2, 3}, {2170, 1735, 650, 1300, 2, 4}, {3625, 2900, 1085, 2175, 2, 4}, {6050, 4840, 1815, 3630, 2, 5}, {10105, 8080, 3030, 6060, 2, 6}, {16870, 13500, 5060, 10125, 3, 7}, {28175, 22540, 8455, 16905, 3, 9}, {47055, 37645, 14115, 28230, 3, 11}, {78580, 62865, 23575, 47150, 3, 13}, {131230, 104985, 39370, 78740, 3, 15}, {219155, 175320, 65745, 131490, 3, 18}, {365985, 292790, 109795, 219590, 3, 22}, {611195, 488955, 183360, 366715, 3, 27}, {1020695, 816555, 306210, 612420, 3, 32}, {1704565, 1363650, 511370, 1022740, 3, 38}},
    {{0, 0, 0, 0, 0, 0}, {70, 90, 70, 20, 0, 1}, {115, 150, 115, 35, 0, 1}, {195, 250, 195, 55, 0, 2}, {325, 420, 325, 95, 0, 2}, {545, 700, 545, 155, 0, 2}, {910, 1170, 910, 260, 1, 3}, {1520, 1950, 1520, 435, 1, 4}, {2535, 3260, 2535, 725, 1, 4}, {4235, 5445, 4235, 1210, 1, 5}, {7070, 9095, 7070, 2020, 1, 6}, {11810, 15185, 11810, 3375, 1, 7}, {19725, 25360, 19725, 5635, 1, 9}, {32940, 42350, 32940, 9410, 1, 11}, {55005, 70720, 55005, 15715, 1, 13}, {91860, 118105, 91860, 26245, 1, 15}, {153405, 197240, 153405, 43830, 2, 18}, {256190, 329385, 256190, 73195, 2, 22}, {427835, 550075, 427835, 122240, 2, 27}, {714485, 918625, 714485, 204140, 2, 32}, {1193195, 1534105, 1193195, 340915, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {70, 40, 60, 20, 2, 2}, {90, 50, 75, 25, 1, 3}, {115, 65, 100, 35, 1, 3}, {145, 85, 125, 40, 1, 4}, {190, 105, 160, 55, 1, 5}, {240, 135, 205, 70, 2, 6}, {310, 175, 265, 90, 2, 7}, {395, 225, 340, 115, 2, 9}, {505, 290, 430, 145, 2, 10}, {645, 370, 555, 185, 2, 12}, {825, 470, 710, 235, 2, 15}, {1060, 605, 905, 300, 2, 18}, {1355, 775, 1160, 385, 2, 21}, {1735, 990, 1485, 495, 2, 26}, {2220, 1270, 1900, 635, 2, 31}, {2840, 1625, 2435, 810, 3, 37}, {3635, 2075, 3115, 1040, 3, 44}, {4650, 2660, 3990, 1330, 3, 53}, {5955, 3405, 5105, 1700, 3, 64}, {7620, 4355, 6535, 2180, 3, 77}},
    {{0, 0, 0, 0, 0, 0}, {110, 160, 90, 70, 1, 1}, {140, 205, 115, 90, 1, 1}, {180, 260, 145, 115, 1, 2}, {230, 335, 190, 145, 1, 2}, {295, 430, 240, 190, 1, 2}, {380, 550, 310, 240, 1, 3}, {485, 705, 395, 310, 1, 4}, {620, 900, 505, 395, 1, 4}, {795, 1155, 650, 505, 1, 5}, {1015, 1475, 830, 645, 1, 6}, {1300, 1890, 1065, 825, 2, 7}, {1660, 2420, 1360, 1060, 2, 9}, {2130, 3095, 1740, 1355, 2, 11}, {2725, 3960, 2230, 1735, 2, 13}, {3485, 5070, 2850, 2220, 2, 15}, {4460, 6490, 3650, 2840, 2, 18}, {5710, 8310, 4675, 3635, 2, 22}, {7310, 10635, 5980, 4650, 2, 27}, {9360, 13610, 7655, 5955, 2, 32}, {11980, 17420, 9800, 7620, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {40, 50, 30, 10, 0, 1}, {50, 65, 40, 15, 0, 1}, {65, 80, 50, 15, 0, 2}, {85, 105, 65, 20, 0, 2}, {105, 135, 80, 25, 0, 2}, {135, 170, 105, 35, 1, 3}, {175, 220, 130, 45, 1, 4}, {225, 280, 170, 55, 1, 4}, {290, 360, 215, 70, 1, 5}, {370, 460, 275, 90, 1, 6}},
    {{0, 0, 0, 0, 0, 0}, {130, 160, 90, 40, 1, 1}, {165, 205, 115, 50, 1, 1}, {215, 260, 145, 65, 1, 2}, {275, 335, 190, 85, 1, 2}, {350, 430, 240, 105, 1, 2}, {445, 550, 310, 135, 1, 3}, {570, 705, 395, 175, 1, 4}, {730, 900, 505, 225, 1, 4}, {935, 1155, 650, 290, 1, 5}, {1200, 1475, 830, 370, 1, 6}, {1535, 1890, 1065, 470, 2, 7}, {1965, 2420, 1360, 605, 2, 9}, {2515, 3095, 1740, 775, 2, 11}, {3220, 3960, 2230, 990, 2, 13}, {4120, 5070, 2850, 1270, 2, 15}, {5275, 6490, 3650, 1625, 2, 18}, {6750, 8310, 4675, 2075, 2, 22}, {8640, 10635, 5980, 2660, 2, 27}, {11060, 13610, 7655, 3405, 2, 32}, {14155, 17420, 9800, 4355, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {80, 100, 70, 20, 1, 1}, {100, 130, 90, 25, 1, 1}, {130, 165, 115, 35, 1, 2}, {170, 210, 145, 40, 1, 2}, {215, 270, 190, 55, 1, 2}, {275, 345, 240, 70, 1, 3}, {350, 440, 310, 90, 1, 4}, {450, 565, 395, 115, 1, 4}, {575, 720, 505, 145, 1, 5}, {740, 920, 645, 185, 1, 6}, {945, 1180, 825, 235, 2, 7}, {1210, 1510, 1060, 300, 2, 9}, {1545, 1935, 1355, 385, 2, 11}, {1980, 2475, 1735, 495, 2, 13}, {2535, 3170, 2220, 635, 2, 15}, {3245, 4055, 2840, 810, 2, 18}, {4155, 5190, 3635, 1040, 2, 22}, {5315, 6645, 4650, 1330, 2, 27}, {6805, 8505, 5955, 1700, 2, 32}, {8710, 10890, 7620, 2180, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {180, 130, 150, 80, 3, 5}, {230, 165, 190, 100, 2, 6}, {295, 215, 245, 130, 2, 7}, {375, 275, 315, 170, 2, 8}, {485, 350, 405, 215, 2, 10}, {620, 445, 515, 275, 2, 12}, {790, 570, 660, 350, 2, 14}, {1015, 730, 845, 450, 2, 17}, {1295, 935, 1080, 575, 2, 21}, {1660, 1200, 1385, 740, 2, 25}, {2125, 1535, 1770, 945, 3, 30}, {2720, 1965, 2265, 1210, 3, 36}, {3480, 2515, 2900, 1545, 3, 43}, {4455, 3220, 3715, 1980, 3, 51}, {5705, 4120, 4755, 2535, 3, 62}, {7300, 5275, 6085, 3245, 3, 74}, {9345, 6750, 7790, 4155, 3, 89}, {11965, 8640, 9970, 5315, 3, 106}, {15315, 11060, 12760, 6805, 3, 128}, {19600, 14155, 16335, 8710, 3, 153}},
    {{0, 0, 0, 0, 0, 0}, {80, 70, 120, 70, 4, 4}, {100, 90, 155, 90, 2, 4}, {130, 115, 195, 115, 2, 5}, {170, 145, 250, 145, 2, 6}, {215, 190, 320, 190, 2, 7}, {275, 240, 410, 240, 3, 9}, {350, 310, 530, 310, 3, 11}, {450, 395, 675, 395, 3, 13}, {575, 505, 865, 505, 3, 15}, {740, 645, 1105, 645, 3, 19}, {945, 825, 1415, 825, 3, 22}, {1210, 1060, 1815, 1060, 3, 27}, {1545, 1355, 2320, 1355, 3, 32}, {1980, 1735, 2970, 1735, 3, 39}, {2535, 2220, 3805, 2220, 3, 46}, {3245, 2840, 4870, 2840, 4, 55}, {4155, 3635, 6230, 3635, 4, 67}, {5315, 4650, 7975, 4650, 4, 80}, {6805, 5955, 10210, 5955, 4, 96}, {8710, 7620, 13065, 7620, 4, 115}},
    {{0, 0, 0, 0, 0, 0}, {580, 460, 350, 180, 1, 2}, {740, 590, 450, 230, 1, 3}, {950, 755, 575, 295, 1, 3}, {1215, 965, 735, 375, 1, 4}, {1555, 1235, 940, 485, 1, 5}, {1995, 1580, 1205, 620, 1, 6}, {2550, 2025, 1540, 790, 1, 7}, {3265, 2590, 1970, 1015, 1, 9}, {4180, 3315, 2520, 1295, 1, 10}, {5350, 4245, 3230, 1660, 1, 12}, {6845, 5430, 4130, 2125, 2, 15}, {8765, 6950, 5290, 2720, 2, 18}, {11220, 8900, 6770, 3480, 2, 21}, {14360, 11390, 8665, 4455, 2, 26}, {18380, 14580, 11090, 5705, 2, 31}, {23530, 18660, 14200, 7300, 2, 37}, {30115, 23885, 18175, 9345, 2, 44}, {38550, 30570, 23260, 11965, 2, 53}, {49340, 39130, 29775, 15315, 2, 64}, {63155, 50090, 38110, 19600, 2, 77}},
    {{0, 0, 0, 0, 0, 0}, {550, 800, 750, 250, 1, 6}, {705, 1025, 960, 320, 1, 7}, {900, 1310, 1230, 410, 1, 9}, {1155, 1680, 1575, 525, 1, 10}, {1475, 2145, 2015, 670, 1, 12}, {1890, 2750, 2575, 860, 1, 15}, {2420, 3520, 3300, 1100, 1, 18}, {3095, 4505, 4220, 1405, 1, 21}, {3965, 5765, 5405, 1800, 1, 26}, {5075, 7380, 6920, 2305, 1, 31}, {6495, 9445, 8855, 2950, 2, 37}, {8310, 12090, 11335, 3780, 2, 45}, {10640, 15475, 14505, 4835, 2, 53}, {13615, 19805, 18570, 6190, 2, 64}, {17430, 25355, 23770, 7925, 2, 77}, {22310, 32450, 30425, 10140, 2, 92}, {28560, 41540, 38940, 12980, 2, 111}, {36555, 53170, 49845, 16615, 2, 133}, {46790, 68055, 63805, 21270, 2, 160}, {59890, 87110, 81670, 27225, 2, 192}},
    {{0, 0, 0, 0, 0, 0}, {155, 130, 125, 70, 2, 1}, {200, 165, 160, 90, 1, 1}, {255, 215, 205, 115, 1, 2}, {325, 275, 260, 145, 1, 2}, {415, 350, 335, 190, 1, 2}, {535, 445, 430, 240, 2, 3}, {680, 570, 550, 310, 2, 4}, {875, 730, 705, 395, 2, 4}, {1115, 935, 900, 505, 2, 5}, {1430, 1200, 1155, 645, 2, 6}, {1830, 1535, 1475, 825, 2, 7}, {2340, 1965, 1890, 1060, 2, 9}, {3000, 2515, 2420, 1355, 2, 11}, {3840, 3220, 3095, 1735, 2, 13}, {4910, 4120, 3960, 2220, 2, 15}, {6290, 5275, 5070, 2840, 3, 18}, {8050, 6750, 6490, 3635, 3, 22}, {10300, 8640, 8310, 4650, 3, 27}, {13185, 11060, 10635, 5955, 3, 32}, {16880, 14155, 13610, 7620, 3, 38}},
    {{0, 0, 0, 0, 0, 0}, {2880, 2740, 2580, 990, 4, 7}, {3630, 3450, 3250, 1245, 2, 9}, {4570, 4350, 4095, 1570, 2, 10}, {5760, 5480, 5160, 1980, 2, 12}, {7260, 6905, 6505, 2495, 2, 15}, {9145, 8700, 8195, 3145, 3, 18}, {11525, 10965, 10325, 3960, 3, 21}, {14520, 13815, 13010, 4990, 3, 26}, {18295, 17405, 16390, 6290, 3, 31}, {23055, 21930, 20650, 7925, 3, 37}, {29045, 27635, 26020, 9985, 3, 45}, {36600, 34820, 32785, 12580, 3, 53}, {46115, 43875, 41310, 15850, 3, 64}, {58105, 55280, 52050, 19975, 3, 77}, {73210, 69655, 65585, 25165, 3, 92}, {92245, 87760, 82640, 31710, 4, 111}, {116230, 110580, 104125, 39955, 4, 133}, {146450, 139330, 131195, 50340, 4, 160}, {184530, 175560, 165305, 63430, 4, 192}, {232505, 221205, 208285, 79925, 4, 230}},
    {{0, 0, 0, 0, 0, 0}, {1250, 1110, 1260, 600, 4, 6}, {1600, 1420, 1615, 770, 2, 7}, {2050, 1820, 2065, 985, 2, 9}, {2620, 2330, 2640, 1260, 2, 10}, {3355, 2980, 3380, 1610, 2, 12}, {4295, 3815, 4330, 2060, 3, 15}, {5500, 4880, 5540, 2640, 3, 18}, {7035, 6250, 7095, 3380, 3, 21}, {9005, 8000, 9080, 4325, 3, 26}, {11530, 10240, 11620, 5535, 3, 31}, {14755, 13105, 14875, 7085, 3, 37}, {18890, 16775, 19040, 9065, 3, 45}, {24180, 21470, 24370, 11605, 3, 53}, {30950, 27480, 31195, 14855, 3, 64}, {39615, 35175, 39930, 19015, 3, 77}, {50705, 45025, 51110, 24340, 4, 92}, {64905, 57635, 65425, 31155, 4, 111}, {83075, 73770, 83740, 39875, 4, 133}, {106340, 94430, 107190, 51040, 4, 160}, {136115, 120870, 137200, 65335, 4, 192}},
    {{0, 0, 0, 0, 0, 0}, {1400, 1330, 1200, 400, 3, 4}, {1790, 1700, 1535, 510, 2, 4}, {2295, 2180, 1965, 655, 2, 5}, {2935, 2790, 2515, 840, 2, 6}, {3760, 3570, 3220, 1075, 2, 7}, {4810, 4570, 4125, 1375, 2, 9}, {6155, 5850, 5280, 1760, 2, 11}, {7880, 7485, 6755, 2250, 2, 13}, {10090, 9585, 8645, 2880, 2, 15}, {12915, 12265, 11070, 3690, 2, 19}, {16530, 15700, 14165, 4720, 3, 22}, {21155, 20100, 18135, 6045, 3, 27}, {27080, 25725, 23210, 7735, 3, 32}, {34660, 32930, 29710, 9905, 3, 39}, {44370, 42150, 38030, 12675, 3, 46}, {56790, 53950, 48680, 16225, 3, 55}, {72690, 69060, 62310, 20770, 3, 67}, {93045, 88395, 79755, 26585, 3, 80}, {119100, 113145, 102085, 34030, 3, 96}, {152445, 144825, 130670, 43555, 3, 115}},
    {{0, 0, 0, 0, 0, 0}, {400, 500, 350, 100, 1, 1}, {510, 640, 450, 130, 1, 1}, {655, 820, 575, 165, 1, 2}, {840, 1050, 735, 210, 1, 2}, {1075, 1340, 940, 270, 1, 2}, {1375, 1720, 1205, 345, 1, 3}, {1760, 2200, 1540, 440, 1, 4}, {2250, 2815, 1970, 565, 1, 4}, {2880, 3605, 2520, 720, 1, 5}, {3690, 4610, 3230, 920, 1, 6}, {4720, 5905, 4130, 1180, 2, 7}, {6045, 7555, 5290, 1510, 2, 9}, {7735, 9670, 6770, 1935, 2, 11}, {9905, 12380, 8665, 2475, 2, 13}, {12675, 15845, 11090, 3170, 2, 15}, {16225, 20280, 14200, 4055, 2, 18}, {20770, 25960, 18175, 5190, 2, 22}, {26585, 33230, 23260, 6645, 2, 27}, {34030, 42535, 29775, 8505, 2, 32}, {43555, 54445, 38110, 10890, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {650, 800, 450, 200, 1, 1}, {830, 1025, 575, 255, 1, 1}, {1065, 1310, 735, 330, 1, 2}, {1365, 1680, 945, 420, 1, 2}, {1745, 2145, 1210, 535, 1, 2}, {2235, 2750, 1545, 685, 1, 3}, {2860, 3520, 1980, 880, 1, 4}, {3660, 4505, 2535, 1125, 1, 4}, {4685, 5765, 3245, 1440, 1, 5}, {5995, 7380, 4150, 1845, 1, 6}, {7675, 9445, 5315, 2360, 2, 7}, {9825, 12090, 6800, 3020, 2, 9}, {12575, 15475, 8705, 3870, 2, 11}, {16095, 19805, 11140, 4950, 2, 13}, {20600, 25355, 14260, 6340, 2, 15}, {26365, 32450, 18255, 8115, 2, 18}, {33750, 41540, 23365, 10385, 2, 22}, {43200, 53170, 29910, 13290, 2, 27}, {55295, 68055, 38280, 17015, 2, 32}, {70780, 87110, 49000, 21780, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {210, 140, 260, 120, 4, 1}, {270, 180, 335, 155, 2, 1}, {345, 230, 425, 195, 2, 2}, {440, 295, 545, 250, 2, 2}, {565, 375, 700, 320, 2, 2}, {720, 480, 895, 410, 3, 3}, {925, 615, 1145, 530, 3, 4}, {1180, 790, 1465, 675, 3, 4}, {1515, 1010, 1875, 865, 3, 5}, {1935, 1290, 2400, 1105, 3, 6}, {2480, 1655, 3070, 1415, 3, 7}, {3175, 2115, 3930, 1815, 3, 9}, {4060, 2710, 5030, 2320, 3, 11}, {5200, 3465, 6435, 2970, 3, 13}, {6655, 4435, 8240, 3805, 3, 15}, {8520, 5680, 10545, 4870, 4, 18}, {10905, 7270, 13500, 6230, 4, 22}, {13955, 9305, 17280, 7975, 4, 27}, {17865, 11910, 22120, 10210, 4, 32}, {22865, 15245, 28310, 13065, 4, 38}},
    {{0, 0, 0, 0, 0, 0}, {700, 670, 700, 240, 2, 1}, {930, 890, 930, 320, 1, 1}, {1240, 1185, 1240, 425, 1, 2}, {1645, 1575, 1645, 565, 1, 2}, {2190, 2095, 2190, 750, 1, 2}, {2915, 2790, 2915, 1000, 2, 3}, {3875, 3710, 3875, 1330, 2, 4}, {5155, 4930, 5155, 1765, 2, 4}, {6855, 6560, 6855, 2350, 2, 5}, {9115, 8725, 9115, 3125, 2, 6}, {12125, 11605, 12125, 4155, 2, 7}, {16125, 15435, 16125, 5530, 2, 9}, {21445, 20525, 21445, 7350, 2, 11}, {28520, 27300, 28520, 9780, 2, 13}, {37935, 36310, 37935, 13005, 2, 15}, {50450, 48290, 50450, 17300, 3, 18}, {67100, 64225, 67100, 23005, 3, 22}, {89245, 85420, 89245, 30600, 3, 27}, {118695, 113605, 118695, 40695, 3, 32}, {157865, 151095, 157865, 54125, 3, 38}},
    {{0, 0, 0, 0, 0, 0}, {220, 160, 90, 40, 4, 5}, {280, 205, 115, 50, 2, 6}, {360, 260, 145, 65, 2, 7}, {460, 335, 190, 85, 2, 8}, {590, 430, 240, 105, 2, 10}, {755, 550, 310, 135, 3, 12}, {970, 705, 395, 175, 3, 14}, {1240, 900, 505, 225, 3, 17}, {1585, 1155, 650, 290, 3, 21}, {2030, 1475, 830, 370, 3, 25}, {2595, 1890, 1065, 470, 3, 30}, {3325, 2420, 1360, 605, 3, 36}, {4255, 3095, 1740, 775, 3, 43}, {5445, 3960, 2230, 990, 3, 51}, {6970, 5070, 2850, 1270, 3, 62}, {8925, 6490, 3650, 1625, 4, 74}, {11425, 8310, 4675, 2075, 4, 89}, {14620, 10635, 5980, 2660, 4, 106}, {18715, 13610, 7655, 3405, 4, 128}, {23955, 17420, 9800, 4355, 4, 153}},
    {{0, 0, 0, 0, 0, 0}, {180, 250, 500, 160, 4, 2}, {230, 320, 640, 205, 2, 3}, {295, 410, 820, 260, 2, 3}, {375, 525, 1050, 335, 2, 4}, {485, 670, 1340, 430, 2, 5}, {620, 860, 1720, 550, 3, 6}, {790, 1100, 2200, 705, 3, 7}, {1015, 1405, 2815, 900, 3, 9}, {1295, 1800, 3605, 1155, 3, 10}, {1660, 2305, 4610, 1475, 3, 12}, {2125, 2950, 5905, 1890, 3, 15}, {2720, 3780, 7555, 2420, 3, 18}, {3480, 4835, 9670, 3095, 3, 21}, {4455, 6190, 12380, 3960, 3, 26}, {5705, 7925, 15845, 5070, 3, 31}, {7300, 10140, 20280, 6490, 4, 37}, {9345, 12980, 25960, 8310, 4, 44}, {11965, 16615, 33230, 10635, 4, 53}, {15315, 21270, 42535, 13610, 4, 64}, {19600, 27225, 54445, 17420, 4, 77}},
    {{0, 0, 0, 0, 0, 0}, {260, 140, 220, 100, 5, 2}, {335, 180, 280, 130, 3, 3}, {425, 230, 360, 165, 3, 3}, {545, 295, 460, 210, 3, 4}, {700, 375, 590, 270, 3, 5}, {895, 480, 755, 345, 3, 6}, {1145, 615, 970, 440, 3, 7}, {1465, 790, 1240, 565, 3, 9}, {1875, 1010, 1585, 720, 3, 10}, {2400, 1290, 2030, 920, 3, 12}, {3070, 1655, 2595, 1180, 4, 15}, {3930, 2115, 3325, 1510, 4, 18}, {5030, 2710, 4255, 1935, 4, 21}, {6435, 3465, 5445, 2475, 4, 26}, {8240, 4435, 6970, 3170, 4, 31}, {10545, 5680, 8925, 4055, 4, 37}, {13500, 7270, 11425, 5190, 4, 44}, {17280, 9305, 14620, 6645, 4, 53}, {22120, 11910, 18715, 8505, 4, 64}, {28310, 15245, 23955, 10890, 4, 77}},
    {{0, 0, 0, 0, 0, 0}, {460, 510, 600, 320, 3, 4}, {590, 655, 770, 410, 2, 4}, {755, 835, 985, 525, 2, 5}, {965, 1070, 1260, 670, 2, 6}, {1235, 1370, 1610, 860, 2, 7}, {1580, 1750, 2060, 1100, 2, 9}, {2025, 2245, 2640, 1405, 2, 11}, {2590, 2870, 3380, 1800, 2, 13}, {3315, 3675, 4325, 2305, 2, 15}, {4245, 4705, 5535, 2950, 2, 19}, {5430, 6020, 7085, 3780, 3, 22}, {6950, 7705, 9065, 4835, 3, 27}, {8900, 9865, 11605, 6190, 3, 32}, {11390, 12625, 14855, 7925, 3, 39}, {14580, 16165, 19015, 10140, 3, 46}, {18660, 20690, 24340, 12980, 3, 55}, {23885, 26480, 31155, 16615, 3, 67}, {30570, 33895, 39875, 21270, 3, 80}, {39130, 43385, 51040, 27225, 3, 96}, {50090, 55535, 65335, 34845, 3, 115}},
    {{0, 0, 0, 0, 0, 0}, {1750, 2250, 1530, 240, 1, 1}, {2240, 2880, 1960, 305, 1, 1}, {2865, 3685, 2505, 395, 1, 2}, {3670, 4720, 3210, 505, 1, 2}, {4700, 6040, 4105, 645, 1, 2}, {6015, 7730, 5255, 825, 1, 3}, {7695, 9895, 6730, 1055, 1, 4}, {9850, 12665, 8615, 1350, 1, 4}, {12610, 16215, 11025, 1730, 1, 5}, {16140, 20755, 14110, 2215, 1, 6}, {20660, 26565, 18065, 2835, 2, 7}, {26445, 34000, 23120, 3625, 2, 9}, {33850, 43520, 29595, 4640, 2, 11}, {43330, 55705, 37880, 5940, 2, 13}, {55460, 71305, 48490, 7605, 2, 15}, {70990, 91270, 62065, 9735, 2, 18}, {90865, 116825, 79440, 12460, 2, 22}, {116305, 149540, 101685, 15950, 2, 27}, {148875, 191410, 130160, 20415, 2, 32}, {190560, 245005, 166600, 26135, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {500, 440, 380, 1240, 3, 1}, {900, 790, 685, 2230, 2, 1}, {1620, 1425, 1230, 4020, 2, 2}, {2915, 2565, 2215, 7230, 2, 2}, {5250, 4620, 3990, 13015, 2, 2}},
    {{0, 0, 0, 0, 0, 0}, {520, 380, 290, 90, 4, 1}, {935, 685, 520, 160, 2, 1}, {1685, 1230, 940, 290, 2, 2}, {3035, 2215, 1690, 525, 2, 2}, {5460, 3990, 3045, 945, 2, 2}},
    {{0, 0, 0, 0, 0, 0}, {440, 480, 320, 50, 3, 1}, {790, 865, 575, 90, 2, 1}, {1425, 1555, 1035, 160, 2, 2}, {2565, 2800, 1865, 290, 2, 2}, {4620, 5040, 3360, 525, 2, 2}},
    {{0, 0, 0, 0, 0, 0}, {200, 450, 510, 120, 6, 1}, {360, 810, 920, 215, 3, 1}, {650, 1460, 1650, 390, 3, 2}, {1165, 2625, 2975, 700, 3, 2}, {2100, 4725, 5355, 1260, 3, 2}},
    {{0, 0, 0, 0, 0, 0}, {1200, 1480, 870, 1600, 4, 1}, {2160, 2665, 1565, 2880, 2, 1}, {3890, 4795, 2820, 5185, 2, 2}, {7000, 8630, 5075, 9330, 2, 2}, {12595, 15535, 9135, 16795, 2, 2}},
    {{0, 0, 0, 0, 0, 0}, {80, 120, 70, 90, 4, 1}, {100, 155, 90, 115, 2, 1}, {130, 195, 115, 145, 2, 2}, {170, 250, 145, 190, 2, 2}, {215, 320, 190, 240, 2, 2}, {275, 410, 240, 310, 3, 3}, {350, 530, 310, 395, 3, 4}, {450, 675, 395, 505, 3, 4}, {575, 865, 505, 650, 3, 5}, {740, 1105, 645, 830, 3, 6}, {945, 1415, 825, 1065, 3, 7}, {1210, 1815, 1060, 1360, 3, 9}, {1545, 2320, 1355, 1740, 3, 11}, {1980, 2970, 1735, 2230, 3, 13}, {2535, 3805, 2220, 2850, 3, 15}, {3245, 4870, 2840, 3650, 4, 18}, {4155, 6230, 3635, 4675, 4, 22}, {5315, 7975, 4650, 5980, 4, 27}, {6805, 10210, 5955, 7655, 4, 32}, {8710, 13065, 7620, 9800, 4, 38}},
    {{0, 0, 0, 0, 0, 0}, {780, 420, 660, 540, 5, 4}, {1000, 540, 845, 690, 3, 4}, {1280, 690, 1080, 885, 3, 5}, {1635, 880, 1385, 1130, 3, 6}, {2095, 1125, 1770, 1450, 3, 7}, {2680, 1445, 2270, 1855, 3, 9}, {3430, 1845, 2905, 2375, 3, 11}, {4390, 2365, 3715, 3040, 3, 13}, {5620, 3025, 4755, 3890, 3, 15}, {7195, 3875, 6085, 4980, 3, 19}, {9210, 4960, 7790, 6375, 4, 22}, {11785, 6345, 9975, 8160, 4, 27}, {15085, 8125, 12765, 10445, 4, 32}, {19310, 10400, 16340, 13370, 4, 39}, {24720, 13310, 20915, 17115, 4, 46}, {31640, 17035, 26775, 21905, 4, 55}, {40500, 21810, 34270, 28040, 4, 67}, {51840, 27915, 43865, 35890, 4, 80}, {66355, 35730, 56145, 45940, 4, 96}, {84935, 45735, 71870, 58800, 4, 115}},
    {{0, 0, 0, 0, 0, 0}, {1460, 930, 1250, 1740, 6, 5}, {2045, 1300, 1750, 2435, 3, 6}, {2860, 1825, 2450, 3410, 3, 7}, {4005, 2550, 3430, 4775, 3, 8}, {5610, 3575, 4800, 6685, 3, 10}, {7850, 5000, 6725, 9360, 4, 12}, {10995, 7000, 9410, 13100, 4, 14}, {15390, 9805, 13175, 18340, 4, 17}, {21545, 13725, 18445, 25680, 4, 21}, {30165, 19215, 25825, 35950, 4, 25}},
    {{0, 0, 0, 0, 0, 0}, {160, 100, 80, 60, 0, 1}, {205, 130, 100, 75, 0, 1}, {260, 165, 130, 100, 0, 2}, {335, 210, 170, 125, 0, 2}, {430, 270, 215, 160, 0, 2}, {550, 345, 275, 205, 1, 3}, {705, 440, 350, 265, 1, 4}, {900, 565, 450, 340, 1, 4}, {1155, 720, 575, 430, 1, 5}, {1475, 920, 740, 555, 1, 6}, {1890, 1180, 945, 710, 1, 7}, {2420, 1510, 1210, 905, 1, 9}, {3095, 1935, 1545, 1160, 1, 11}, {3960, 2475, 1980, 1485, 1, 13}, {5070, 3170, 2535, 1900, 1, 15}, {6490, 4055, 3245, 2435, 2, 18}, {8310, 5190, 4155, 3115, 2, 22}, {10635, 6645, 5315, 3990, 2, 27}, {13610, 8505, 6805, 5105, 2, 32}, {17420, 10890, 8710, 6535, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {70, 90, 170, 70, 0, 1}, {90, 115, 220, 90, 0, 1}, {115, 145, 280, 115, 0, 2}, {145, 190, 355, 145, 0, 2}, {190, 240, 455, 190, 0, 2}, {240, 310, 585, 240, 1, 3}, {310, 395, 750, 310, 1, 4}, {395, 505, 955, 395, 1, 4}, {505, 650, 1225, 505, 1, 5}, {645, 830, 1570, 645, 1, 6}, {825, 1065, 2005, 825, 1, 7}, {1060, 1360, 2570, 1060, 1, 9}, {1355, 1740, 3290, 1355, 1, 11}, {1735, 2230, 4210, 1735, 1, 13}, {2220, 2850, 5390, 2220, 1, 15}, {2840, 3650, 6895, 2840, 2, 18}, {3635, 4675, 8825, 3635, 2, 22}, {4650, 5980, 11300, 4650, 2, 27}, {5955, 7655, 14460, 5955, 2, 32}, {7620, 9800, 18510, 7620, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {120, 200, 0, 80, 0, 1}, {155, 255, 0, 100, 0, 1}, {195, 330, 0, 130, 0, 2}, {250, 420, 0, 170, 0, 2}, {320, 535, 0, 215, 0, 2}, {410, 685, 0, 275, 1, 3}, {530, 880, 0, 350, 1, 4}, {675, 1125, 0, 450, 1, 4}, {865, 1440, 0, 575, 1, 5}, {1105, 1845, 0, 740, 1, 6}, {1415, 2360, 0, 945, 1, 7}, {1815, 3020, 0, 1210, 1, 9}, {2320, 3870, 0, 1545, 1, 11}, {2970, 4950, 0, 1980, 1, 13}, {3805, 6340, 0, 2535, 1, 15}, {4870, 8115, 0, 3245, 2, 18}, {6230, 10385, 0, 4155, 2, 22}, {7975, 13290, 0, 5315, 2, 27}, {10210, 17015, 0, 6805, 2, 32}, {13065, 21780, 0, 8710, 2, 38}},
    {{0, 0, 0, 0, 0, 0}, {66700, 69050, 72200, 13200, 1, 0}, {68535, 70950, 74185, 13565, 1, 0}, {70420, 72900, 76225, 13935, 1, 0}, {72355, 74905, 78320, 14320, 1, 0}, {74345, 76965, 80475, 14715, 1, 0}, {76390, 79080, 82690, 15120, 1, 0}, {78490, 81255, 84965, 15535, 1, 0}, {80650, 83490, 87300, 15960, 1, 0}, {82865, 85785, 89700, 16400, 1, 0}, {85145, 88145, 92165, 16850, 1, 0}, {87485, 90570, 94700, 17315, 2, 0}, {89895, 93060, 97305, 17790, 2, 0}, {92365, 95620, 99980, 18280, 2, 0}, {94905, 98250, 102730, 18780, 2, 0}, {97515, 100950, 105555, 19300, 2, 0}, {100195, 103725, 108460, 19830, 2, 0}, {102950, 106580, 111440, 20375, 2, 0}, {105785, 109510, 114505, 20935, 2, 0}, {108690, 112520, 117655, 21510, 2, 0}, {111680, 115615, 120890, 22100, 2, 0}, {114755, 118795, 124215, 22710, 3, 0}, {117910, 122060, 127630, 23335, 3, 0}, {121150, 125420, 131140, 23975, 3, 0}, {124480, 128870, 134745, 24635, 3, 0}, {127905, 132410, 138455, 25315, 3, 0}, {131425, 136055, 142260, 26010, 3, 0}, {135035, 139795, 146170, 26725, 3, 0}, {138750, 143640, 150190, 27460, 3, 0}, {142565, 147590, 154320, 28215, 3, 0}, {146485, 151650, 158565, 28990, 3, 0}, {150515, 155820, 162925, 29785, 4, 0}, {154655, 160105, 167405, 30605, 4, 0}, {158910, 164505, 172010, 31450, 4, 0}, {163275, 169030, 176740, 32315, 4, 0}, {167770, 173680, 181600, 33200, 4, 0}, {172380, 178455, 186595, 34115, 4, 0}, {177120, 183360, 191725, 35055, 4, 0}, {181995, 188405, 197000, 36015, 4, 0}, {186995, 193585, 202415, 37005, 4, 0}, {192140, 198910, 207985, 38025, 4, 0}, {197425, 204380, 213705, 39070, 5, 0}, {202855, 210000, 219580, 40145, 5, 0}, {208430, 215775, 225620, 41250, 5, 0}, {214165, 221710, 231825, 42385, 5, 0}, {220055, 227805, 238200, 43550, 5, 0}, {226105, 234070, 244750, 44745, 5, 0}, {232320, 240505, 251480, 45975, 5, 0}, {238710, 247120, 258395, 47240, 5, 0}, {245275, 253915, 265500, 48540, 5, 0}, {252020, 260900, 272800, 49875, 5, 0}, {258950, 268075, 280305, 51245, 6, 0}, {266070, 275445, 288010, 52655, 6, 0}, {273390, 283020, 295930, 54105, 6, 0}, {280905, 290805, 304070, 55590, 6, 0}, {288630, 298800, 312430, 57120, 6, 0}, {296570, 307020, 321025, 58690, 6, 0}, {304725, 315460, 329850, 60305, 6, 0}, {313105, 324135, 338925, 61965, 6, 0}, {321715, 333050, 348245, 63670, 6, 0}, {330565, 342210, 357820, 65420, 6, 0}, {339655, 351620, 367660, 67220, 7, 0}, {348995, 361290, 377770, 69065, 7, 0}, {358590, 371225, 388160, 70965, 7, 0}, {368450, 381435, 398835, 72915, 7, 0}, {378585, 391925, 409800, 74920, 7, 0}, {388995, 402700, 421070, 76985, 7, 0}, {399695, 413775, 432650, 79100, 7, 0}, {410685, 425155, 444550, 81275, 7, 0}, {421980, 436845, 456775, 83510, 7, 0}, {433585, 448860, 469335, 85805, 7, 0}, {445505, 461205, 482240, 88165, 8, 0}, {457760, 473885, 495505, 90590, 8, 0}, {470345, 486920, 509130, 93080, 8, 0}, {483280, 500310, 523130, 95640, 8, 0}, {496570, 514065, 537520, 98270, 8, 0}, {510225, 528205, 552300, 100975, 8, 0}, {524260, 542730, 567490, 103750, 8, 0}, {538675, 557655, 583095, 106605, 8, 0}, {553490, 572990, 599130, 109535, 8, 0}, {568710, 588745, 615605, 112550, 8, 0}, {584350, 604935, 632535, 115645, 9, 0}, {600420, 621575, 649930, 118825, 9, 0}, {616930, 638665, 667800, 122090, 9, 0}, {633895, 656230, 686165, 125450, 9, 0}, {651330, 674275, 705035, 128900, 9, 0}, {669240, 692820, 724425, 132445, 9, 0}, {687645, 711870, 744345, 136085, 9, 0}, {706555, 731445, 764815, 139830, 9, 0}, {725985, 751560, 785850, 143675, 9, 0}, {745950, 772230, 807460, 147625, 9, 0}, {766460, 793465, 829665, 151685, 10, 0}, {787540, 815285, 852480, 155855, 10, 0}, {809195, 837705, 875920, 160140, 10, 0}, {831450, 860745, 900010, 164545, 10, 0}, {854315, 884415, 924760, 169070, 10, 0}, {877810, 908735, 950190, 173720, 10, 0}, {901950, 933725, 976320, 178495, 10, 0}, {926750, 959405, 1000000, 183405, 10, 0}, {952235, 985785, 1000000, 188450, 10, 0}, {1000000, 1000000, 1000000, 193630, 10, 0}}
};

#define qMakePairBuilding(x, y) qMakePair(RESOURCES_NUMBER + x, y)
//#define b(x) (RESOURCES_NUMBER + x)

QMap<quint8, QList<QPair<quint8, quint8>>> buildingsRequirements{
    {MARKETPLACE, {qMakePairBuilding(MAIN_BUILDING, 3), qMakePairBuilding(WAREHOUSE, 1), qMakePairBuilding(GRANARY, 1)}},
    {RESIDENCE, {qMakePairBuilding(MAIN_BUILDING, 5), qMakePairBuilding(PALACE, NOT_BUILT)}}, // 0 is required for Wonder of the worlds for great warehouse/granary
    {PALACE, {qMakePairBuilding(EMBASSY, 1), qMakePairBuilding(MAIN_BUILDING, 5), qMakePairBuilding(RESIDENCE, NOT_BUILT)}},
    {STONEMASONS_LODGE, {qMakePairBuilding(MAIN_BUILDING, 5)}},
    {TREASURY, {qMakePairBuilding(MAIN_BUILDING, 10), qMakePair(WONDER_OF_THE_WORLD, NOT_BUILT)}},
    {BREWERY, {qMakePairBuilding(GRANARY, 20), qMakePairBuilding(RALLY_POINT, 10)}},
    {TOWN_HALL, {qMakePairBuilding(MAIN_BUILDING, 10), qMakePairBuilding(ACADEMY, 10)}},
    {TRADE_OFFICE, {qMakePairBuilding(MARKETPLACE, 20), qMakePairBuilding(STABLE, 10)}},
    {GREAT_WAREHOUSE, {qMakePairBuilding(MAIN_BUILDING, 10), qMakePairBuilding(WONDER_OF_THE_WORLD, 0)}},
    {GREAT_GRANARY, {qMakePairBuilding(MAIN_BUILDING, 10), qMakePairBuilding(WONDER_OF_THE_WORLD, 0)}},
    {BARRACKS, {qMakePairBuilding(RALLY_POINT, 1), qMakePairBuilding(MAIN_BUILDING, 3)}},
    {HEROS_MANSION, {qMakePairBuilding(MAIN_BUILDING, 3), qMakePairBuilding(RALLY_POINT, 1)}}, // Travian order :'( see previous line
    {ACADEMY, {qMakePairBuilding(BARRACKS, 3), qMakePairBuilding(MAIN_BUILDING, 3)}},
    {SMITHY, {qMakePairBuilding(MAIN_BUILDING, 3), qMakePairBuilding(ACADEMY, 1)}},
    {STABLE, {qMakePairBuilding(SMITHY, 3), qMakePairBuilding(ACADEMY, 5)}},
    {WORKSHOP, {qMakePairBuilding(ACADEMY, 10), qMakePairBuilding(MAIN_BUILDING, 5)}},
    {TOURNAMENT_SQUARE, {qMakePairBuilding(RALLY_POINT, 15)}},
    {GRAIN_MILL, {qMakePair(CROPLAND, 5)}},
    {SAWMILL, {qMakePair(WOODCUTTER, 10), qMakePairBuilding(MAIN_BUILDING, 5)}},
    {BRICKYARD, {qMakePair(CLAY_PIT, 10), qMakePairBuilding(MAIN_BUILDING, 5)}},
    {IRON_FOUNDRY, {qMakePair(IRON_MINE, 10), qMakePairBuilding(MAIN_BUILDING, 5)}},
    {BAKERY, {qMakePair(CROPLAND, 10), qMakePairBuilding(MAIN_BUILDING, 5)}}
};
//void initializeBuildingsRequirements() {}

// if wonder of the world can really be at level 0 we might have to change conventions like NOT_BUILT value instead of 0 or make a special case for wonder of the world
quint8 getMaxLevelForBuilding(quint8 buildingType, bool extendedToFarms = false)
{
    qint8 maxLevel = -1;
    if(extendedToFarms)
    {
        for(quint8 farmsSlotsIndex = 0; farmsSlotsIndex < FARMS_NUMBER; farmsSlotsIndex++)
        {
            quint8 farmType = farmsTypes[farmsSlotsIndex],
                   farmLevel = farms[farmsSlotsIndex];
            if(farmType == buildingType && farmLevel > maxLevel)
                maxLevel = farmLevel;
        }
        if(buildingType >= RESOURCES_NUMBER)
            buildingType -= RESOURCES_NUMBER;
    }
    for(quint8 buildingsSlotsIndex = 0; buildingsSlotsIndex < BUILDINGS_SLOTS_NUMBER; buildingsSlotsIndex++)
    {
        QPair<quint8, quint8> building = buildings[buildingsSlotsIndex];
        quint8 buildingTypeTmp = building.first,
               buildingLevel = building.second;
        if(buildingTypeTmp == buildingType && buildingLevel > maxLevel)
            maxLevel = buildingLevel;
    }
    return maxLevel == -1 ? NOT_BUILT : maxLevel;
}

bool isRequirementMet(quint8 buildingIndex, quint8 buildingLevelRequirement)
{
    quint8 maxLevelBuilding = getMaxLevelForBuilding(buildingIndex, true);
    //qInfo((QString::number(maxLevelBuilding) + " " + QString::number(buildingLevelRequirement)).toStdString().c_str());
    return (buildingLevelRequirement == NOT_BUILT && maxLevelBuilding == NOT_BUILT) || (maxLevelBuilding != NOT_BUILT && maxLevelBuilding >= buildingLevelRequirement);
}

QString areRequirementsMet(quint8 buildingsIndex)
{
    if(buildingsRequirements.find(buildingsIndex) == buildingsRequirements.end())
        return "";
    QString requirements = "";
    bool requirementsAreMet = true;
    QList<QPair<quint8, quint8>> buildingRequirements = buildingsRequirements[buildingsIndex];
    quint8 buildingRequirementsLength = buildingRequirements.length();
    for(quint8 buildingRequirementsIndex = 0; buildingRequirementsIndex < buildingRequirementsLength; buildingRequirementsIndex++)
    {
        QPair<quint8, quint8> buildingRequirement = buildingRequirements[buildingRequirementsIndex];
        quint8 buildingType = buildingRequirement.first,
               buildingLevelRequirement = buildingRequirement.second;
        bool requirementIsMet = isRequirementMet(buildingType, buildingLevelRequirement);
        if(!requirementIsMet)
        {
            requirementsAreMet = false;
        }
        bool isBuilding = buildingType >= RESOURCES_NUMBER;
        QString buildingName = "<b><font color=\"green\">" + firstUppercase(translator.translate(isBuilding ? "buildings" : "resources", (isBuilding ? buildingsNames[buildingType - RESOURCES_NUMBER] : farmsNames[buildingType]).toStdString().c_str())) + "</font></b>";
        if(buildingLevelRequirement != NOT_BUILT)
            requirements += buildingName + " " + (requirementIsMet ? "" : "<font color=\"red\">") + translator.translate("resources", "Level") + " " + QString::number(buildingLevelRequirement) + (requirementIsMet ? "" : "</font>");
        else
            requirements += "<s>" + buildingName + "</s>";
        if(buildingRequirementsIndex < buildingRequirementsLength - 1)
            requirements += ", ";
    }
    return requirementsAreMet ? "" : requirements;
}

void setBuildingsScreen()
{
    screenView = SCREEN_VIEW_BUILDINGS;
    //window->update();
    myWindow->manageBackground();
    return;
}

void setBuildingScreen(quint8 buildingsIndex)
{
    screenView = SCREEN_VIEW_BUILDING;
    screenViewBuildingsIndex = buildingsIndex;
    //qInfo("menu");
}

quint32 getTimeForBuilding(quint8 buildingId, quint8 level)
{
    quint8 mainBuildingLevel = getMaxLevelForBuilding(MAIN_BUILDING);
    //qInfo(QString::number(mainBuildingLevel).toStdString().c_str());
    quint32 time = buildingsTimes[buildingId][level - 1][mainBuildingLevel];
    //qInfo(QString::number(time).toStdString().c_str());
    return time;
}

QString getDescription(quint8 buildingId)
{
    switch(buildingId)
    {
        case MAIN_BUILDING:
            return QObject::tr("The village's master builders live in the main building. The higher its level the faster your master builders complete the construction of new buildings.");
        case RALLY_POINT:
            return QObject::tr("Your village's troops gather here. From here, you can send them out to conquer, raid or reinforce other villages.\n\nThe rally point can only be built on the green grassland below and to the right of your main building.\n\nIf there are less attacking units than the level of the rally point, you can see the type of unit attacking.");
        case CRANNY:
            return QObject::tr("The cranny hides some of your resources in case the village gets attacked. These resources cannot get stolen.\n\nAt level 1 the cranny can hold 200 of each resource. The capacity of Gallic crannies is 1.5 times larger.\n\nIf a Teutonic hero attacks a village, crannies can hide only 80% of their normal capacity.");
        case WAREHOUSE:
            return QObject::tr("The resources lumber, clay and iron are stored in the warehouse. By increasing its level, you increase your warehouse's capacity.");
        case GRANARY:
            return QObject::tr("The crop produced on your farms is stored in the granary. By increasing its level, you increase the granary’s capacity.");
        case EMBASSY:
            return QObject::tr("The embassy is a place for diplomats. At level 1 you can join an alliance, and after extending it to level 3 you may even found one yourself.\n\nThe maximum number of members in an alliance is 60.");
        case MARKETPLACE:
            return QObject::tr("At the marketplace, you can trade resources with other players. The higher its level, the more resources can be transported by your merchants at the same time.");
        case RESIDENCE:
            return QObject::tr("The Residence protects the village against enemy conquests. You can build one residence per village. Units that can found a new village or conquer existing villages can be trained here.\n\nAdditionally, the residence provides an expansion slot at levels 10 and 20 each.");
        case PALACE:
            return QObject::tr("The palace building is unique. You can only build one in your whole realm and you can proclaim that village as your capital. It also protects the village against enemy conquests. Units that can found a new village or conquer existing villages can be trained here.\n\nAdditionally, the palace provides an expansion slot at levels 10, 15 and 20 each.");
        case STONEMASONS_LODGE:
            return QObject::tr("The stonemason's lodge is an expert at cutting stone. The further the building is extended, the higher the stability of the village's buildings.\n\nIt can only be built in the capital.");
        case TREASURY:
            return QObject::tr("The riches of your empire are kept in the treasury. A treasury can only store one artefact at a time.\n\nYou need a treasury at level 10 for a small artefact, or level 20 for a great one.");
        case BREWERY:
            return QObject::tr("Tasty mead is brewed in the brewery and later quaffed by the soldiers during the celebrations.\n\nThese drinks make your soldiers braver and stronger when attacking others (1% per level). Unfortunately, the chiefs’ power of persuasion is decreased and catapults can only do random hits.\n\nIt can only be built by Teutons and only in their capital. It affects the whole empire.");
        case HORSE_DRINKING_TROUGH:
            return QObject::tr("The horse drinking trough cares for the well-being of your horses and therefore increases the speed of their training.\n\nThe horse drinking trough reduces the crop usage for the following soldiers: Equites Legati from level 10, Equites Imperatoris from level 15 and Equites Caesaris from level 20.\n\nThe horse drinking trough can only be built by Romans.");
        case TOWN_HALL:
            return QObject::tr("In the town hall, you can hold pompous celebrations. Such a celebration increases your culture points (= CP).\n\nCulture points are necessary to found or conquer new villages. Each building produces culture points and the higher its level, the more CP it produces.");
        case TRADE_OFFICE:
            return QObject::tr("In the trade office, the merchants' carts get improved and equipped with more powerful horses. The higher its level, the more your merchants are able to carry.");
        case GREAT_GRANARY:
            return QObject::tr("The great granary has 3 times the capacity of a normal granary.\n\nThis building can only be built in wonder of the world villages or with a special Natarian artefact.");
        case GREAT_WAREHOUSE:
            return QObject::tr("The great warehouse has 3 times the capacity of a normal warehouse.\n\nThis building can only be built in wonder of the world villages or with a special Natarian artefact.");
        case TRAPPER:
            return QObject::tr("The trapper protects your village with well hidden traps. This means that unwary enemies can be imprisoned and won't be able to harm your village any more.\n\nTroops cannot be freed with a raid. If the owner of the traps release the captives all of the traps will be repaired automatically.\n\nThe trapper can only be constructed by Gauls.");
        case BARRACKS:
            return QObject::tr("Infantry can be trained in the barracks. The higher its level, the faster the troops are trained.");
        case HEROS_MANSION:
            return QObject::tr("The hero's mansion is the home of your glorious hero.\n\nAt building levels 10, 15 and 20, you can use your hero to annex an unoccupied oasis to your village, one per each of these levels respectively. Depending on the oasis, you will get a production increase for a certain type of resource (or even two resources, from some oases).");
        case ACADEMY:
            return QObject::tr("New unit types can be researched in the academy. By increasing its level, you can order the research of better units.");
        case SMITHY:
            return QObject::tr("The weapons and armor of your warriors are enhanced in the smithy's melting furnaces. By increasing its level, you can order the fabrication of even better weapons and armor.");
        case STABLE:
            return QObject::tr("Cavalry can be trained in the stable. The higher its level, the faster the troops are trained.");
        case WORKSHOP:
            return QObject::tr("Siege engines, like catapults and rams, can be built in the workshop. The higher its level, the faster these units are produced.");
        case TOURNAMENT_SQUARE:
            return QObject::tr("Your troops can increase their stamina at the Tournament Square. The further the building is upgraded, the faster your troops are beyond a minimum distance of 20 squares.");
        case GRAIN_MILL:
            return QObject::tr("The grain mill grinds grain into flour. Based on its level, your grain mill can increase your crop production by up to 25 percent.");
        case SAWMILL:
            return QObject::tr("Lumber cut by your woodcutters is processed here. Based on its level, your sawmill can increase your lumber production by up to 25 percent.");
        case BRICKYARD:
            return QObject::tr("The brickyard converts clay into bricks. Based on its level, your brickyard can increase your clay production by up to 25 percent.");
        case IRON_FOUNDRY:
            return QObject::tr("The iron foundry melts iron. Based on its level, your iron foundry can increase your iron production by up to 25 percent.");
        case BAKERY:
            return QObject::tr("The bakery uses flour to make bread. In conjunction to the grain mill, the increase in crop production can go up to 50 percent in total.");
        case PALISADE:
            return QObject::tr("By building a palisade, you can protect your village against the barbarian hordes of your enemies. The higher its level, the higher is the bonus given to your forces' defense.\n\nThe palisade can only be built by Gauls, its defence bonus and its durability is between that of the Teutonic earth wall and the Roman city wall.");
        case CITY_WALL:
            return QObject::tr("By building a city wall, you can protect your village against the barbarian hordes of your enemies. The higher its level, the higher is the bonus given to your forces' defense.\n\nThe city wall can only be built by Romans.\n\nThe city wall offers the biggest defence bonus, but it is easier to destroy than the Gaulish palisade or the Teutonic earth wall.");
        case EARTH_WALL:
            return QObject::tr("By building an earth wall, you can protect your village against the barbarian hordes of your enemies. The higher its level, the higher is the bonus given to your forces' defense.\n\nThe earth wall can only be built by Teutons.\n\nThe earth wall offers the lowest defence bonus but it is almost impossible to destroy it.");
        default: // WONDER_OF_THE_WORLD
            return QObject::tr("WW");
    }
}

// "quite funny" but culture points aren't shown here
// and for warehouse and granary not showing what precise improvement it will give
void addBuilding(QVBoxLayout* vboxTab, quint8 buildingId, bool redim = false) // QMap<quint8, quint8> ?
{
    //if(building) // code functions with current buildings
    QWidget* qBuilding = new QWidget,
           * qText = new QWidget,
           * qCostsLine = new QWidget;
    QHBoxLayout* hbox = new QHBoxLayout,
               * hboxCostsLine = new QHBoxLayout;
    QVBoxLayout* vboxText = new QVBoxLayout;
    QString buildingName = buildingsNames[buildingId],
            description = getDescription(buildingId);
    QLabel* qTitle = new QLabel(firstUppercase(translator.translate("buildings", buildingName.toStdString().c_str()))),
          * qDescription = new QLabel(description + "\n"), // it doesn't seem to have any single \n could almost double them
          * qCosts = new QLabel(QObject::tr("Costs") + ":");
    qTitle->setFont(QFont("Comic Sans MS", 15, QFont::Bold));
    qDescription->setWordWrap(true);
    qCosts->setFont(QFont("Comic Sans MS", 13, QFont::Bold));
    vboxText->addWidget(qTitle);
    vboxText->addWidget(qDescription);
    vboxText->addWidget(qCosts);

    // should share this code with resources.cpp when we display farm building menu - Travian doesn't put spaces for the numbers more than 1 000
    bool hasEnoughResources = true;
    quint32 maxSeconds = 0;
    QString notPossibleMessage = "";
    for(quint8 resourcesIndex = 0; resourcesIndex < RESOURCES_NUMBER + 1; resourcesIndex++)
    {
        QString resourceName = resourcesNames[resourcesIndex];
        quint32 buildingCost = buildingsCosts[RESOURCES_NUMBER + buildingId][1][resourcesIndex];//farmsCosts[farmType][farmLevel + 1][resourcesIndex];
        if(resourcesIndex < 3)
        {
             if(buildingCost > warehouseCapacity)
             {
                 notPossibleMessage = QObject::tr("Extended warehouse first.");
             }
        }
        else if(resourcesIndex == 3 && buildingCost > granaryCapacity)
        {
            notPossibleMessage = notPossibleMessage != "" ? QObject::tr("Extend warehouse and granary first.") : QObject::tr("Extended granary first.");
        }
        if(resourcesAmount[resourcesIndex] < buildingCost)
        {
            hasEnoughResources = false;
            quint32 secondsBeforeHavingResource = secondsBeforeHaving(resourcesIndex, buildingCost);
            maxSeconds = qMax(maxSeconds, secondsBeforeHavingResource);
        }
        QWidget* qResource = getResource(resourceName, buildingCost, false);
        hboxCostsLine->addWidget(qResource);
    }
    qCostsLine->setLayout(hboxCostsLine);
    vboxText->addWidget(qCostsLine);
    if(!hasEnoughResources && notPossibleMessage == "")
    {
        QDateTime enoughResourcesDateTime = getDateTime().addSecs(maxSeconds);

        notPossibleMessage = QObject::tr("Enough resources on") + " " + enoughResourcesDateTime.toString("dd.MM.yy") + " " + QObject::tr("at") + " " + enoughResourcesDateTime.toString("hh:mm") + ".";
    }
    if(buildingsCosts[RESOURCES_NUMBER + buildingId][1][FREE_CROP] > resourcesAmount[FREE_CROP]) // could share this code with farms ?
    {
        notPossibleMessage = QObject::tr("Lack of food: extend cropland first !");
    }
    if(lastActionTime != 0)
    {
        notPossibleMessage = QObject::tr("Your masons are still working on another building !");
    }
    QString requirements = areRequirementsMet(/*RESOURCES_NUMBER + */buildingId);
    if(requirements != "")
    {
        notPossibleMessage = "<b>" + QObject::tr("Prerequisites") + "</b><br/>" + requirements; // <font color=\"blue\"></font>
    }
    if(notPossibleMessage != "")
    {
        hasEnoughResources = false;
        QLabel* qNotPossibleMessage = new QLabel(notPossibleMessage);
        vboxText->addWidget(qNotPossibleMessage);
    }

    QWidget* qTime = new QWidget;
    QHBoxLayout* timeHBox = new QHBoxLayout;
    timeHBox->addWidget(getQLabel("resources/time.png"));
    quint32 time = getTimeForBuilding(RESOURCES_NUMBER + buildingId, 1);//farmsCosts[farmType][farmLevel + 1][TIME];
    QLabel* qCurrentInfo = new QLabel(getHoursMinutesSecondsStr(time));
    timeHBox->addWidget(qCurrentInfo);
    timeHBox->setAlignment(Qt::AlignLeft);
    qTime->setLayout(timeHBox);
    vboxText->addWidget(qTime);
    if(hasEnoughResources)
    {
        //QWidget* qUpgrade = new QWidget;
        //QHBoxLayout* upgradeHBox = new QHBoxLayout;
        QPushButton* upgradeButton = new QPushButton(QObject::tr("Construct building"));
        //upgradeHBox->addWidget(upgradeButton);
        //upgradeHBox->setAlignment(Qt::AlignHCenter);
        //qUpgrade->setLayout(upgradeHBox);
        vboxText->addWidget(upgradeButton/*qUpgrade*/);

        QObject::connect(upgradeButton, &QPushButton::clicked, [](){ constructBuilding(); });
    }

    qText->setLayout(vboxText);
    hbox->addWidget(qText);
    // could put center image in white space remaining and could also center vertically next to description text
    //hbox->addStretch();
    hbox->addWidget(getQLabel("buildings/" + getTribe() + "/" + buildingName + ".png", false, "", "", redim ? 120 : 0));
    //hbox->setAlignment(Qt::AlignHCenter);
    //hbox->addStretch();
    qBuilding->setLayout(hbox);
    vboxTab->addWidget(qBuilding);
}

void constructBuilding()
{

}

quint8 constructionTime[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 100, 96, 93, 90, 86, 83, 80, 77, 75, 72, 69, 67, 64, 62, 60, 58, 56, 54, 52, 50
};

quint16 crannyCapacity[2][11] = {
    {0, 200, 260, 340, 440, 560, 720, 920, 1200, 1540, 2000},
    {0, 300, 390, 510, 660, 840, 1080, 1380, 1800, 2310, 3000}
};

quint32 warehouseGranaryCapacity[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 1200, 1700, 2300, 3100, 4000, 5000, 6300, 7800, 9600, 11800, 14400, 17600, 21400, 25900, 31300, 37900, 45700, 55100, 66400, 80000
};

quint8 merchants[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 1, 2, 3,4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
};

quint16 durability[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300
};

quint8 lengthOfTraining[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 100, 90, 81, 73, 66, 59, 53, 48, 43, 39, 35, 31, 28, 25, 23, 21, 19, 17, 15, 14
};

quint16 getCrannyCapacityForLevel(quint8 level)
{
    return crannyCapacity[tribe == TRIBE_GAULS ? 1 : 0][level];
}

quint16 troopsSpeed[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400, 420, 440, 460, 480, 500
};

quint8 resourcesSpeed[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 5, 10, 15, 20, 25
};

quint8 defenseBonus[BUILDINGS_LEVELS_NUMBER + 1] = {
    2, 4, 6, 8, 10, 13, 15, 17, 20, 22, 24, 27, 29, 32, 35, 37, 40, 43, 46, 49
};

quint16 traps[BUILDINGS_LEVELS_NUMBER + 1] = {
    0, 10, 22, 35, 49, 64, 80, 97, 115, 134, 154, 175, 196, 218, 241, 265, 290, 316, 343, 371, 400
};

quint16 getCrannyCapacity(quint8 buildingsSlotsIndex)
{
    QPair<quint8, quint8> building = buildings[buildingsSlotsIndex];
    quint8 buildingLevel = building.second,
           buildingType = building.first;
    return buildingType == CRANNY ? getCrannyCapacityForLevel(buildingLevel) : 0;
}

quint32 getTotalCranniesCapacity()
{
    quint32 totalCranniesCapacity = 0;
    for(quint8 buildingsSlotsIndex = 0; buildingsSlotsIndex < BUILDINGS_SLOTS_NUMBER; buildingsSlotsIndex++)
    {
        totalCranniesCapacity += getCrannyCapacity(buildingsSlotsIndex);
    }
    return totalCranniesCapacity;
}

void sendTroops()
{

}

void prepareMerchants()
{

}

void offerResources()
{

}

void acceptOffer()
{

}

void trainInfantery()
{

}

void research()
{

}

QWidget* getTroopWidget(quint8 troopsIndex, bool isResearch = false)
{
    QVBoxLayout* rightColumnVBox = new QVBoxLayout;
    QWidget* troop = new QWidget,
           * rightColumn = new QWidget,
           * troopNameLine = new QWidget,
           * inputLine = new QWidget,
           * timeLine = new QWidget,
           * resourcesLine = new QWidget;
    QHBoxLayout* hbox = new QHBoxLayout,
               * troopNameHBox = new QHBoxLayout,
               * inputHBox = new QHBoxLayout,
               * timeHBox = new QHBoxLayout,
               * resourcesHBox = new QHBoxLayout;

    QString troopName = getTroopName(troopsIndex),
            troopPath = "/" + getTribe() + "/" + troopName + ".png";
    hbox->addWidget(getQLabel("troops/zoom" + troopPath));
    troopNameHBox->addWidget(getQLabel("troops" + troopPath));
    troopNameHBox->addWidget(new QLabel(firstUppercase(translator.translate("troops", troopName.toStdString().c_str())) + (isResearch ? "" : " " + translator.translate("resources", "Level") + " " + QString::number(0) + " (" + QObject::tr("present") + " " + QString::number(troops[troopsIndex]) + ")")));
    troopNameHBox->addStretch();
    troopNameLine->setLayout(troopNameHBox);
    rightColumnVBox->addWidget(troopNameLine);

    quint32 maxTroop = QUINT32_MAX_VALUE;
    for(quint8 resourcesIndex = 0; resourcesIndex < RESOURCES_NUMBER + (isResearch ? 0 : 1); resourcesIndex++)
    {
        resourcesHBox->addWidget(getQLabel("resources/" + resourcesNames[resourcesIndex] + ".png"));
        quint16 troopCost = isResearch ? researchCosts[tribe][troopsIndex][resourcesIndex] : troopsCosts[tribe][troopsIndex][resourcesIndex];
        resourcesHBox->addWidget(new QLabel(QString::number(troopCost)));
        //if(resourcesIndex < RESOURCES_NUMBER)
        if(!isResearch)
        {
            maxTroop = qMin((quint32)qFloor(resourcesAmount[resourcesIndex] / troopCost), maxTroop); // if maxTroop == 0 could break if make a for loop dedicated for this purpose
        }
    }
    resourcesHBox->addStretch();
    resourcesLine->setLayout(resourcesHBox);
    rightColumnVBox->addWidget(resourcesLine);

    QString path = "resources/";
    if(!isResearch)
    {
        path += "infantery";
        path += " ";
    }
    path += "time.png";

    timeHBox->addWidget(getQLabel(path));
    timeHBox->addWidget(new QLabel(getHoursMinutesSecondsStr(isResearch ? researchCosts[tribe][troopsIndex][4] : troopsCosts[tribe][troopsIndex][TIME] * lengthOfTraining[getMaxLevelForBuilding(BARRACKS)] / 100)));
    timeHBox->addStretch();
    if(isResearch)
    {
        QPushButton* researchButton = new QPushButton(QObject::tr("Research"));

        QObject::connect(researchButton, &QPushButton::clicked, [](){ research(); });

        timeHBox->addWidget(researchButton);
    }
    timeLine->setLayout(timeHBox);
    rightColumnVBox->addWidget(timeLine);

    inputHBox->addWidget(new QLabel(QObject::tr("Amount")));
    QLineEdit* qLineEdit = new QLineEdit;
    if(maxTroop == 0)
        qLineEdit->setDisabled(true);
    else
        qLineEdit->setValidator(new QIntValidator(0, maxTroop));
    inputHBox->addWidget(qLineEdit);
    inputHBox->addWidget(new QLabel("/ " + QString::number(maxTroop)));
    //inputHBox->addStretch();
    inputLine->setLayout(inputHBox);
    ///rightColumnVBox->addWidget(inputLine);

    rightColumn->setLayout(rightColumnVBox);

    hbox->addWidget(rightColumn);
    troop->setLayout(hbox);
    return troop;
}

QList<QPair<QString, QWidget*>> getRallyPointTabs()
{
    QList<QPair<QString, QWidget*>> tabs;
    QWidget* overviewTab = new QWidget,
           * sendTroopsTab = new QWidget,
           * qOverviewGrid = new QWidget,
           * qSendTroopsGrid = new QWidget;//,
           //* combatSimulatorTab = new QWidget;

    QVBoxLayout* overviewVBox = new QVBoxLayout,
               * sendTroopsVBox = new QVBoxLayout;
    overviewVBox->addWidget(new QLabel(QObject::tr("Troops in this village"))); // and its oases (1) ?!
    QGridLayout* overviewGrid = new QGridLayout;
    overviewGrid->addWidget(new QLabel(firstUppercase(QObject::tr("%1's village").arg(nickname))), 0, 0);
    overviewGrid->addWidget(new QLabel(QObject::tr("Own troops")), 0, 1, 1, TROOPS_NUMBER, Qt::AlignCenter);
    overviewGrid->addWidget(new QLabel(getCoordinatesStr()), 1, 0, Qt::AlignCenter);
    for(quint8 troopsIndex = 0; troopsIndex < TROOPS_NUMBER; troopsIndex++)
    {
        overviewGrid->addWidget(getQLabel("troops/" + getTribe() + "/" + getTroopName(troopsIndex) + ".png"), 1, troopsIndex + 1, Qt::AlignCenter);
        overviewGrid->addWidget(new QLabel(QString::number(0)), 2, troopsIndex + 1, Qt::AlignCenter);
    }
    overviewGrid->addWidget(new QLabel(QObject::tr("Troops")), 2, 0, Qt::AlignCenter);
    overviewGrid->addWidget(new QLabel(QObject::tr("Consumption")), 3, 0, Qt::AlignCenter);
    QWidget* qConsumption = new QWidget;
    QHBoxLayout* hbox = new QHBoxLayout;
    quint32 consumption = 0;
    hbox->addWidget(new QLabel(QString::number(consumption)));
    hbox->addWidget(getQLabel("resources/crop.png"));
    hbox->addWidget(new QLabel(QObject::tr("per hour")));
    hbox->addStretch();
    qConsumption->setLayout(hbox);
    overviewGrid->addWidget(qConsumption, 3, 1, 1, TROOPS_NUMBER);
    qOverviewGrid->setLayout(overviewGrid);
    overviewVBox->addWidget(qOverviewGrid);
    overviewVBox->addStretch();
    overviewTab->setLayout(overviewVBox);
    tabs.append(qMakePair(QObject::tr("Overview"), overviewTab)); // already translated into "Vue d'ensemble" and not "Situation" but it's ok

    quint8 rows = 3,
           columns = qCeil((double)TROOPS_NUMBER / rows);//qCeil((((double)TROOPS_NUMBER) / ((double)rows)));
    //qInfo(QString::number(columns).toStdString().c_str());
    QGridLayout* sendToopsGrid = new QGridLayout;
    for(quint8 columnsIndex = 0; columnsIndex < columns; columnsIndex++)
    {
        for(quint8 rowsIndex = 0; rowsIndex < rows; rowsIndex++)
        {
            //qInfo("come on");
            quint8 troopsIndex = columnsIndex * rows + rowsIndex;
            if(troopsIndex >= TROOPS_NUMBER) break;
            QWidget* qTroop = new QWidget;
            quint32 troopAmount = troops[troopsIndex];
            QHBoxLayout* hbox = new QHBoxLayout;
            hbox->addWidget(getQLabel("troops/" + getTribe() + "/" + getTroopName(troopsIndex) + ".png")); // could make a function to get the path giving a troopsIndex ? (used multiple times)
            QLineEdit* qLineEdit = new QLineEdit; // wanted to make a QTextEdit firstly but no setValidator function - should reduce width of our qLineEdit...
            //qLineEdit->setMaxLength(6);
            if(troopAmount == 0)
                qLineEdit->setDisabled(true);
            else
                qLineEdit->setValidator(new QIntValidator(0, troopAmount)); // if troopAmount = 2 for instance users are able to type 3... :S
            hbox->addWidget(qLineEdit);
            hbox->addWidget(new QLabel("/ " + QString::number(troopAmount)));
            hbox->addStretch();
            qTroop->setLayout(hbox);
            sendToopsGrid->addWidget(qTroop, rowsIndex, columnsIndex);
        }
    }
    qSendTroopsGrid->setLayout(sendToopsGrid);
    sendTroopsVBox->addWidget(qSendTroopsGrid);

    QRadioButton* reinforcementButton = new QRadioButton(QObject::tr("Reinforcement")),
                * normalAttackButton = new QRadioButton(QObject::tr("Attack") + ": " + QObject::tr("normal"));//,
                //* raidAttackButton = new QRadioButton(QObject::tr("Attack) + ": " + QObject::tr("raid"));
    sendTroopsVBox->addWidget(reinforcementButton);
    sendTroopsVBox->addWidget(normalAttackButton);
    //sendTroopsVBox->addWidget(raidAttackButton);
    QPushButton* sendButton = new QPushButton(QObject::tr("Send"));

    QObject::connect(sendButton, &QPushButton::clicked, [](){ sendTroops(); });

    sendTroopsVBox->addWidget(sendButton);
    sendTroopsVBox->addStretch();

    sendTroopsTab->setLayout(sendTroopsVBox);

    // maybe will remove this tab later or will make a shortcut from profile to fulfil fields (village and coordinates automatically)
    tabs.append(qMakePair(QObject::tr("Send troops"), sendTroopsTab));
    //tabs.append(qMakePair(QObject::tr("Combat Simulator"), combatSimulatorTab));
    return tabs;
}

QList<QPair<QString, QWidget*>> getResidenceTabs()
{
    QList<QPair<QString, QWidget*>> tabs;
    QWidget* trainTab = new QWidget,
           * culturePointsTab = new QWidget,
           * loyaltyTab = new QWidget,
           * expansionTab = new QWidget;
    tabs.append(qMakePair(QObject::tr("Train"), trainTab));
    tabs.append(qMakePair(QObject::tr("Culture points"), culturePointsTab));
    tabs.append(qMakePair(QObject::tr("Loyalty"), loyaltyTab));
    tabs.append(qMakePair(QObject::tr("Expansion"), expansionTab));
    return tabs;
}

QList<QPair<QString, QWidget*>> getMarketplaceTabs()
{
    QList<QPair<QString, QWidget*>> tabs;
    QWidget* sendResourcesTab = new QWidget,
           * buyTab = new QWidget,
           * offerTab = new QWidget,
           * qBuyGrid = new QWidget,
           * qOfferGrid = new QWidget;

    QVBoxLayout* sendResourcesVBox = new QVBoxLayout,
               * buyVBox = new QVBoxLayout,
               * offerVBox = new QVBoxLayout;
    quint8 merchantsAmount = merchants[getMaxLevelForBuilding(MARKETPLACE)];
    quint16 quantityPerMerchant = 1000;
    QLabel* qMarchants = new QLabel(QObject::tr("Merchants") + " " + QString::number(merchantsAmount) + " / " + QString::number(merchantsAmount));
    sendResourcesVBox->addWidget(qMarchants);
    sendResourcesVBox->addWidget(new QLabel(QObject::tr("Each of your merchants can carry <b>%1</b> resources.").arg(quantityPerMerchant)));
    for(quint8 resourcesIndex = 0; resourcesIndex < RESOURCES_NUMBER; resourcesIndex++)
    {
        QWidget* qResource = new QWidget;
        QHBoxLayout* hbox = new QHBoxLayout;
        QString resourceName = resourcesNames[resourcesIndex];
        hbox->addWidget(getQLabel("resources/" + resourceName + ".png"));
        hbox->addWidget(new QLabel(firstUppercase(translator.translate("resources", resourceName.toStdString().c_str()))));
        QLineEdit* qLineEdit = new QLineEdit; // same comments as for rally point above
        qLineEdit->setValidator(new QIntValidator(0, quantityPerMerchant));
        hbox->addWidget(qLineEdit);
        hbox->addWidget(new QLabel(" / " + QString::number(quantityPerMerchant)));
        qResource->setLayout(hbox);
        sendResourcesVBox->addWidget(qResource);
    }
    sendResourcesVBox->addWidget(new QLabel(QObject::tr("Merchants") + ": " + QString::number(0) + "\t" + QString::number(0) + " / " + QString::number(quantityPerMerchant)));
    QPushButton* prepareButton = new QPushButton(QObject::tr("Prepare"));

    QObject::connect(prepareButton, &QPushButton::clicked, [](){ prepareMerchants(); });
    sendResourcesVBox->addWidget(prepareButton);
    sendResourcesTab->setLayout(sendResourcesVBox);

    tabs.append(qMakePair(QObject::tr("Send resources"), sendResourcesTab));

    buyVBox->addWidget(qMarchants);
    buyVBox->addWidget(new QLabel(QObject::tr("Offers at the marketplace")));

    QGridLayout* buyGrid = new QGridLayout,
               * offerGrid = new QGridLayout;

    buyGrid->addWidget(new QLabel(QObject::tr("Offered to me")), 0, 0, 1, 2, Qt::AlignCenter);
    buyGrid->addWidget(getQLabel("resources/ratio.png"), 0, 2, Qt::AlignCenter);
    buyGrid->addWidget(new QLabel(QObject::tr("Wanted from me")), 0, 3, 1, 2, Qt::AlignCenter);
    buyGrid->addWidget(new QLabel(QObject::tr("Player")), 0, 5, Qt::AlignCenter);
    buyGrid->addWidget(new QLabel(QObject::tr("Duration")), 0, 6, Qt::AlignCenter);
    buyGrid->addWidget(new QLabel(QObject::tr("Action")), 0, 7, Qt::AlignCenter);
    tuple<quint8, quint16, quint8, quint16, QString> offer = make_tuple(0, 1000, 1, 2433, "Benjamin Loison"); // in the future will also have to precise a village by a quint8 (max 50 villages)
    quint8 resourceTypeOfferedToMe = get<0>(offer),
           resourceTypeWantedFromMe = get<2>(offer);
    quint16 resourceAmountOfferedToMe = get<1>(offer),
            resourceAmountWantedFromMe = get<3>(offer);
    QString player = get<4>(offer);
    buyGrid->addWidget(getQLabel("resources/" + resourcesNames[resourceTypeOfferedToMe] + ".png"), 1, 0);
    buyGrid->addWidget(new QLabel(QString::number(resourceAmountOfferedToMe)), 1, 1);
    // color: max
    // green: 1.0
    // orange: 1.5
    // red: 1.6
    double ratio = (double)resourceAmountWantedFromMe / resourceAmountOfferedToMe;
    //qInfo(QString::number(ratio).toStdString().c_str());
    QColor qColor = QColor(73, 136, 67);
    if(ratio >= 1.55)
        qColor = QColor(212, 10, 0); // red
    else if(ratio >= 1.05)
        qColor = QColor(247, 140, 31); // orange
    QLabel* qRatio = new QLabel("<b>" + QString::number(ratio, 'g', 2) + "</b>");
    setColor(qRatio, QColor(), qColor);
    buyGrid->addWidget(qRatio, 1, 2, Qt::AlignCenter);
    buyGrid->addWidget(getQLabel("resources/" + resourcesNames[resourceTypeWantedFromMe] + ".png"), 1, 3);
    buyGrid->addWidget(new QLabel(QString::number(resourceAmountWantedFromMe)), 1, 4);
    buyGrid->addWidget(new QLabel(player), 1, 5);
    buyGrid->addWidget(new QLabel(getHoursMinutesSecondsStr(123)), 1, 6, Qt::AlignCenter);
    if(resourcesAmount[resourceTypeWantedFromMe] >= resourceAmountWantedFromMe)
    {
        QPushButton* acceptOfferButton = new QPushButton(QObject::tr("Accept offer"));

        QObject::connect(acceptOfferButton, &QPushButton::clicked, [](){ acceptOffer(); });
        buyGrid->addWidget(acceptOfferButton, 1, 7, Qt::AlignCenter);
    }
    else
    {
        buyGrid->addWidget(new QLabel(QObject::tr("Not enough resources")), 1, 7, Qt::AlignCenter);
    }

    qBuyGrid->setLayout(buyGrid);
    buyVBox->addWidget(qBuyGrid);
    buyVBox->addStretch();
    buyTab->setLayout(buyVBox);

    tabs.append(qMakePair(QObject::tr("Buy"), buyTab));

    offerVBox->addWidget(qMarchants);
    QString labels[2] = {QObject::tr("I'm offering"), QObject::tr("I'm searching")};
    for(quint8 labelsIndex = 0; labelsIndex < 2; labelsIndex++)
    {
        offerGrid->addWidget(new QLabel(labels[labelsIndex]), labelsIndex, 0);
        QLineEdit* qLineEdit = new QLineEdit;
        qLineEdit->setValidator(new QIntValidator(0, quantityPerMerchant));
        offerGrid->addWidget(qLineEdit, labelsIndex, 1);
        QComboBox* qComboBox = new QComboBox;
        for(quint8 resourcesIndex = 0; resourcesIndex < RESOURCES_NUMBER; resourcesIndex++)
        {
            QString resourceName = resourcesNames[resourcesIndex];
            qComboBox->addItem(firstUppercase(translator.translate("resources", resourceName.toStdString().c_str())));
        }
        qComboBox->setCurrentIndex(labelsIndex == 0 ? 0 : 1);
        offerGrid->addWidget(qComboBox, labelsIndex, 2);
    }
    QCheckBox* qCheckBox = new QCheckBox(QObject::tr("maximum time of transport"));
    offerGrid->addWidget(qCheckBox, 0, 3);
    QLineEdit* qLineEdit = new QLineEdit;
    qLineEdit->setValidator(new QIntValidator(0, 100));
    offerGrid->addWidget(qLineEdit, 0, 4);
    offerGrid->addWidget(new QLabel(QObject::tr("hours")), 0, 5);

    qOfferGrid->setLayout(offerGrid);
    offerVBox->addWidget(qOfferGrid);

    QPushButton* okButton = new QPushButton(QObject::tr("OK"));

    QObject::connect(okButton, &QPushButton::clicked, [](){ offerResources(); });

    offerVBox->addWidget(okButton);
    offerVBox->addStretch();
    offerTab->setLayout(offerVBox);

    tabs.append(qMakePair(QObject::tr("Offer"), offerTab));
    return tabs;
}

QWidget* getBarracksAdditionnalContent()
{
    QWidget* additionnalContent = new QWidget,
           * troops = new QWidget;
    QVBoxLayout* additionnalContentVBox = new QVBoxLayout,
               * vbox = new QVBoxLayout;
    QLabel* title = new QLabel("<b>" + QObject::tr("Train troops") + "</b>");
    additionnalContentVBox->addWidget(title);
    // let's not share code because there isn't that much to share
    QScrollArea* scrollArea = new QScrollArea;
    quint8 troopsIndex = 0;
    QWidget* troop = getTroopWidget(troopsIndex);
    vbox->addWidget(troop);
    // let's make the train button global
    QPushButton* trainButton = new QPushButton(QObject::tr("Train"));

    QObject::connect(trainButton, &QPushButton::clicked, [](){ trainInfantery(); });
    troops->setLayout(vbox);
    scrollArea->setWidget(troops);
    additionnalContentVBox->addWidget(scrollArea);
    additionnalContentVBox->addWidget(trainButton);
    additionnalContent->setLayout(additionnalContentVBox);
    return additionnalContent;
}

QWidget* getAcademyAdditionnalContent()
{
    QWidget* additionnalContent = new QWidget,
           * troops = new QWidget;
    QVBoxLayout* vbox = new QVBoxLayout,
               * additionnalContentVBox = new QVBoxLayout;
    QLabel* title = new QLabel("<b>" + QObject::tr("Research unit for village %1").arg(QObject::tr("%1's village").arg(nickname)) + "</b>");
    //vbox->addWidget(new QLabel(QObject::tr("No new troops can be researched at the moment. To look up the prerequisites for new troops, click on the picture of the relevant unit in the manual.")));
    for(quint8 troopsIndex = 1; troopsIndex < TROOPS_NUMBER - 1; troopsIndex++)
    {
        // should share code with barracks
        QWidget* troop = getTroopWidget(troopsIndex, true);
        vbox->addWidget(troop);
    }
    troops->setLayout(vbox);

    QScrollArea* scrollArea = new QScrollArea;

    scrollArea->setWidget(troops);

    additionnalContentVBox->addWidget(title);
    additionnalContentVBox->addWidget(scrollArea);
    additionnalContent->setLayout(additionnalContentVBox);
    return additionnalContent;
}

QWidget* getAdditionnalContent(quint8 buildingType)
{
    QWidget* additionnalContent = nullptr;
    switch(buildingType)
    {
        case TOWN_HALL:
            break;
        case BARRACKS:
        {
            additionnalContent = getBarracksAdditionnalContent();
            break;
        }
        case ACADEMY:
        {
            additionnalContent = getAcademyAdditionnalContent();
            break;
        }
        case SMITHY:
            break;
        case STABLE:
            break;
        case WORKSHOP:
            break;
        default:
            break;
    }
    return additionnalContent;
}

QList<QPair<QString, QWidget*>> getTabs(quint8 buildingType)
{
    QList<QPair<QString, QWidget*>> tabs;
    switch(buildingType)
    {
        case RALLY_POINT:
        {
            tabs = getRallyPointTabs();
            break;
        }
        case MARKETPLACE:
        {
            // the management tab gives details about where are merchants but in fact it's not really important because we know how many merchants we have and how many are available
            tabs = getMarketplaceTabs();
            break;
        }
        case RESIDENCE:
        {
            tabs = getResidenceTabs();
            break;
        }
        default:
            break;
    }
    return tabs;
}

QStringList getLines(quint8 buildingLevel, quint8 buildingType)
{
    QStringList lines;
    switch(buildingType)
    {
        case MAIN_BUILDING:
            lines.append(QObject::tr("Current construction time") + ": " + QString::number(constructionTime[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Construction time at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(constructionTime[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;
        case RALLY_POINT: // what does Slot mean ? have to deal theoritically with "troops visibility"
            break;
        case CRANNY:
            lines.append(QObject::tr("Units per resource hidden by all crannies") + ": " + QString::number(getTotalCranniesCapacity()) + " " + QObject::tr("units"));
            lines.append(QObject::tr("Units per resource hidden by this cranny") + ": " + QString::number(getCrannyCapacity(screenViewBuildingsIndex)) + " " + QObject::tr("units"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Cranny capacity at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(getCrannyCapacityForLevel(buildingLevel + 1)) + " " + QObject::tr("units"));
            break;
        // EMBASSY NO CHANGE FROM A LEVEL TO THE OTHER
        case WAREHOUSE:
            lines.append(QObject::tr("Current capacity") + ": " + QString::number(warehouseGranaryCapacity[buildingLevel]) + " " + QObject::tr("resource units"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Capacity at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(warehouseGranaryCapacity[buildingLevel + 1]) + " " + QObject::tr("resource units"));
            break;
        case GRANARY: // same as WAREHOUSE unless for "resource units"
            lines.append(QObject::tr("Current capacity") + ": " + QString::number(warehouseGranaryCapacity[buildingLevel]) + " " + QObject::tr("crop units"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Capacity at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(warehouseGranaryCapacity[buildingLevel + 1]) + " " + QObject::tr("resource units"));
            break;
        case MARKETPLACE:
            lines.append(QObject::tr("Current merchants") + ": " + QString::number(merchants[buildingLevel]));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Merchants at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(merchants[buildingLevel + 1]));
            break;
        // RESIDENCE NO CHANGE FROM A LEVEL TO THE OTHER
        // PALACE NO CHANGE FROM A LEVEL TO THE OTHER
        case STONEMASONS_LODGE:
            lines.append(QObject::tr("Current stability") + ": " + QString::number(durability[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Building stability at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(durability[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;
        // TREASURY NO CHANGE FROM A LEVEL TO THE OTHER
        // TOWN_HALL NO CHANGE FROM A LEVEL TO THE OTHER
        /*case TRADE_OFFICE:
            lines.append(QObject::tr("Current stability") + ": " + QString::number(durability[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Building stability at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(durability[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;*/
        case BARRACKS:
        // HERO'S MANSION NO CHANGE FROM A LEVEL TO THE OTHER
        case STABLE:
        case WORKSHOP:
            lines.append(QObject::tr("Current building's training time") + ": " + QString::number(lengthOfTraining[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Building's training time at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(lengthOfTraining[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;
        // ACADEMY NO CHANGE FROM A LEVEL TO THE OTHER
        // SMITHY NO CHANGE FROM A LEVEL TO THE OTHER
        case TOURNAMENT_SQUARE:
            lines.append(QObject::tr("Current speed") + ": " + QString::number(troopsSpeed[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Speed at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(troopsSpeed[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;
        case GRAIN_MILL:
        case SAWMILL:
        case BRICKYARD:
        case IRON_FOUNDRY:
        case BAKERY:
            lines.append(QObject::tr("Current increase in production") + ": " + QString::number(resourcesSpeed[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Increase at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(resourcesSpeed[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;
        case TRAPPER:
            lines.append(QObject::tr("Total maximum number of traps") + ": " + QString::number(traps[buildingLevel]) + " " + QObject::tr("traps"));
            lines.append(QObject::tr("Maximum number of traps currently possible") + ": " + QString::number(traps[buildingLevel]) + " " + QObject::tr("traps"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Maximum number of traps at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(traps[buildingLevel + 1]) + " " + QObject::tr("traps"));
            break;
        case PALISADE:
        case CITY_WALL:
        case EARTH_WALL:
            lines.append(QObject::tr("Current defense bonus") + ": " + QString::number(defenseBonus[buildingLevel]) + " " + QObject::tr("percent"));
            if(buildingLevel < buildingsLevelsNumber[buildingType])
                lines.append(QObject::tr("Defense bonus at level") + " " + QString::number(buildingLevel + 1) + ": " + QString::number(defenseBonus[buildingLevel + 1]) + " " + QObject::tr("percent"));
            break;
        default:
            break;
    }
    return lines;
}

// why some buildings on focus have a different background ?
QWidget* getBuildingImprovementScreen()
{
    QPair<quint8, quint8> building = buildings[screenViewBuildingsIndex];
    quint8 buildingLevel = building.second,
           buildingType = building.first;
    QStringList lines = getLines(buildingLevel, buildingType);

    // there is an additionnal line when upgrading the building

    QString description = getDescription(buildingType);
    QList<QPair<QString, QWidget*>> tabs = getTabs(buildingType);

    QWidget* additionnalContent = getAdditionnalContent(buildingType);

    return getImproveScreen(buildingType, "buildings", buildingLevel, lines, description, tabs, additionnalContent);
}

// can't only use getMaxLevelForBuilding (think about the case one cranny at level 10 and another at level 2) - with new function it's ok
bool canBuildACranny()
{
    quint8 maxLevelCranny = getMaxLevelForBuilding(CRANNY);
    return maxLevelCranny == NOT_BUILT || maxLevelCranny < buildingsLevelsNumber[CRANNY];
}

QWidget* getBuildingScreen()
{
    QWidget* screen = new QWidget,
           * vWidget = new QWidget;
    QVBoxLayout* vbox = new QVBoxLayout;
    QHBoxLayout* hbox = new QHBoxLayout;

    QLabel* qTitle = new QLabel(QObject::tr("Construct new building"));
    qTitle->setFont(QFont("Comic Sans MS", 20, QFont::Bold));
    vbox->addWidget(qTitle);
    if(screenViewBuildingsIndex != BUILDING_SLOT_WALL)
    {
        QWidget* infrastructureTab = new QWidget,
               * militaryTab = new QWidget,
               * resourcesTab = new QWidget;
        QScrollArea* infrastructureScrollArea = new QScrollArea,
                   * militaryScrollArea = new QScrollArea,
                   * resourcesScrollArea = new QScrollArea;
        QVBoxLayout* vboxInfrastructureTab = new QVBoxLayout,
                   * vboxMilitaryTab = new QVBoxLayout,
                   * vboxResourcesTab = new QVBoxLayout;
        QTabWidget* tabs = new QTabWidget();
        // maybe need to set a geometry like when choosing a tribe otherwise Qt is complaining in logs - or not ? it doesn't seem only when vboxTab exceeds screen size

        // should choose correctly a license for this project
        // cf README so let's not show "useless" things

        // have to manage prerequisites
        infrastructureTab->setLayout(vboxInfrastructureTab);

        // should also manage the possibility of building se - ?
        // could also just show buildings the right order and show in place if it's not possible because of building requirement not met
        // don't show anymore requirements when they are met

        //QList<tuple<QVBoxLayout*, quint8, QString>> tabBuildings,
        //                                            tabBuildingsAvailable,
        //                                            tabBuildingsNotAvailable;

        if(canBuildACranny())
            addBuilding(vboxInfrastructureTab, CRANNY);
        //vboxInfrastructureTab->addWidget(getHorizontalLine());
        addBuilding(vboxInfrastructureTab, WAREHOUSE);
        //vboxInfrastructureTab->addWidget(getHorizontalLine()); // working on first call but not second wut
        addBuilding(vboxInfrastructureTab, GRANARY);
        addBuilding(vboxInfrastructureTab, EMBASSY);
        addBuilding(vboxInfrastructureTab, MARKETPLACE);
        addBuilding(vboxInfrastructureTab, RESIDENCE);
        //addBuilding(vboxInfrastructureTab, PALACE);
        addBuilding(vboxInfrastructureTab, STONEMASONS_LODGE);
        //addBuilding(vboxInfrastructureTab, TREASURY);
        //if(tribe == TRIBE_TEUTONS) // don't use a switch because have to use a default case and gauls isn't in this section
        //    addBuilding(vboxInfrastructureTab, BREWERY);
        //else if(tribe == TRIBE_ROMANS)
        //    addBuilding(vboxInfrastructureTab, HORSE_DRINKING_TROUGH);
        addBuilding(vboxInfrastructureTab, TOWN_HALL); // like trade office and tournament square they don't have a high priority
        addBuilding(vboxInfrastructureTab, TRADE_OFFICE);
        //addBuilding(vboxInfrastructureTab, GREAT_GRANARY);
        //addBuilding(vboxInfrastructureTab, GREAT_WAREHOUSE);

        infrastructureScrollArea->setWidget(infrastructureTab);
        tabs->addTab(infrastructureScrollArea/*infrastructureTab*/, QObject::tr("Infrastructure"));

        militaryTab->setLayout(vboxMilitaryTab);

        //if(tribe == TRIBE_GAULS)
        //    addBuilding(vboxMilitaryTab, TRAPPER, true);

        addBuilding(vboxMilitaryTab, BARRACKS);
        //addBuilding(vboxMilitaryTab, HEROS_MANSION);
        addBuilding(vboxMilitaryTab, ACADEMY);
        addBuilding(vboxMilitaryTab, SMITHY);
        addBuilding(vboxMilitaryTab, STABLE);
        addBuilding(vboxMilitaryTab, WORKSHOP);
        addBuilding(vboxMilitaryTab, TOURNAMENT_SQUARE);

        militaryScrollArea->setWidget(militaryTab);
        tabs->addTab(militaryScrollArea/*militaryTab*/, QObject::tr("Military"));

        resourcesTab->setLayout(vboxResourcesTab);

        addBuilding(vboxResourcesTab, GRAIN_MILL);
        addBuilding(vboxResourcesTab, SAWMILL);
        addBuilding(vboxResourcesTab, BRICKYARD);
        addBuilding(vboxResourcesTab, IRON_FOUNDRY);
        addBuilding(vboxResourcesTab, BAKERY);

        resourcesScrollArea->setWidget(resourcesTab);
        tabs->addTab(resourcesScrollArea/*resourcesTab*/, QObject::tr("Resources"));

        vbox->addWidget(tabs);
    }
    else
    {
        // used to be in military tab
        switch(tribe)
        {
            case TRIBE_GAULS:
                addBuilding(vbox, PALISADE, true);
                break;
            case TRIBE_ROMANS:
                addBuilding(vbox, CITY_WALL, true);
                break;
            default: // case TRIBE_TEUTONS
                addBuilding(vbox, EARTH_WALL, true);
                break;
        }
    }

    vWidget->setLayout(vbox);
    QPalette palette = vWidget->palette();
    palette.setColor(QPalette::Window, Qt::white);
    vWidget->setAutoFillBackground(true);
    vWidget->setPalette(palette);

    hbox->addStretch();
    hbox->addWidget(vWidget);
    hbox->addStretch();
    screen->setLayout(hbox);

    return screen;
}

bool isAWall(quint8 buildingType)
{
    return buildingType == PALISADE || buildingType == CITY_WALL || buildingType == EARTH_WALL;
}
